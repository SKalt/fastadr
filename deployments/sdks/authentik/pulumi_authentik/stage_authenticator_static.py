# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['StageAuthenticatorStaticArgs', 'StageAuthenticatorStatic']

@pulumi.input_type
class StageAuthenticatorStaticArgs:
    def __init__(__self__, *,
                 configure_flow: Optional[pulumi.Input[str]] = None,
                 friendly_name: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 stage_authenticator_static_id: Optional[pulumi.Input[str]] = None,
                 token_count: Optional[pulumi.Input[float]] = None,
                 token_length: Optional[pulumi.Input[float]] = None):
        """
        The set of arguments for constructing a StageAuthenticatorStatic resource.
        :param pulumi.Input[float] token_count: Defaults to `6`.
        :param pulumi.Input[float] token_length: Defaults to `12`.
        """
        if configure_flow is not None:
            pulumi.set(__self__, "configure_flow", configure_flow)
        if friendly_name is not None:
            pulumi.set(__self__, "friendly_name", friendly_name)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if stage_authenticator_static_id is not None:
            pulumi.set(__self__, "stage_authenticator_static_id", stage_authenticator_static_id)
        if token_count is not None:
            pulumi.set(__self__, "token_count", token_count)
        if token_length is not None:
            pulumi.set(__self__, "token_length", token_length)

    @property
    @pulumi.getter(name="configureFlow")
    def configure_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "configure_flow")

    @configure_flow.setter
    def configure_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "configure_flow", value)

    @property
    @pulumi.getter(name="friendlyName")
    def friendly_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "friendly_name")

    @friendly_name.setter
    def friendly_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "friendly_name", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="stageAuthenticatorStaticId")
    def stage_authenticator_static_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "stage_authenticator_static_id")

    @stage_authenticator_static_id.setter
    def stage_authenticator_static_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "stage_authenticator_static_id", value)

    @property
    @pulumi.getter(name="tokenCount")
    def token_count(self) -> Optional[pulumi.Input[float]]:
        """
        Defaults to `6`.
        """
        return pulumi.get(self, "token_count")

    @token_count.setter
    def token_count(self, value: Optional[pulumi.Input[float]]):
        pulumi.set(self, "token_count", value)

    @property
    @pulumi.getter(name="tokenLength")
    def token_length(self) -> Optional[pulumi.Input[float]]:
        """
        Defaults to `12`.
        """
        return pulumi.get(self, "token_length")

    @token_length.setter
    def token_length(self, value: Optional[pulumi.Input[float]]):
        pulumi.set(self, "token_length", value)


@pulumi.input_type
class _StageAuthenticatorStaticState:
    def __init__(__self__, *,
                 configure_flow: Optional[pulumi.Input[str]] = None,
                 friendly_name: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 stage_authenticator_static_id: Optional[pulumi.Input[str]] = None,
                 token_count: Optional[pulumi.Input[float]] = None,
                 token_length: Optional[pulumi.Input[float]] = None):
        """
        Input properties used for looking up and filtering StageAuthenticatorStatic resources.
        :param pulumi.Input[float] token_count: Defaults to `6`.
        :param pulumi.Input[float] token_length: Defaults to `12`.
        """
        if configure_flow is not None:
            pulumi.set(__self__, "configure_flow", configure_flow)
        if friendly_name is not None:
            pulumi.set(__self__, "friendly_name", friendly_name)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if stage_authenticator_static_id is not None:
            pulumi.set(__self__, "stage_authenticator_static_id", stage_authenticator_static_id)
        if token_count is not None:
            pulumi.set(__self__, "token_count", token_count)
        if token_length is not None:
            pulumi.set(__self__, "token_length", token_length)

    @property
    @pulumi.getter(name="configureFlow")
    def configure_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "configure_flow")

    @configure_flow.setter
    def configure_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "configure_flow", value)

    @property
    @pulumi.getter(name="friendlyName")
    def friendly_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "friendly_name")

    @friendly_name.setter
    def friendly_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "friendly_name", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="stageAuthenticatorStaticId")
    def stage_authenticator_static_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "stage_authenticator_static_id")

    @stage_authenticator_static_id.setter
    def stage_authenticator_static_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "stage_authenticator_static_id", value)

    @property
    @pulumi.getter(name="tokenCount")
    def token_count(self) -> Optional[pulumi.Input[float]]:
        """
        Defaults to `6`.
        """
        return pulumi.get(self, "token_count")

    @token_count.setter
    def token_count(self, value: Optional[pulumi.Input[float]]):
        pulumi.set(self, "token_count", value)

    @property
    @pulumi.getter(name="tokenLength")
    def token_length(self) -> Optional[pulumi.Input[float]]:
        """
        Defaults to `12`.
        """
        return pulumi.get(self, "token_length")

    @token_length.setter
    def token_length(self, value: Optional[pulumi.Input[float]]):
        pulumi.set(self, "token_length", value)


class StageAuthenticatorStatic(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 configure_flow: Optional[pulumi.Input[str]] = None,
                 friendly_name: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 stage_authenticator_static_id: Optional[pulumi.Input[str]] = None,
                 token_count: Optional[pulumi.Input[float]] = None,
                 token_length: Optional[pulumi.Input[float]] = None,
                 __props__=None):
        """
        Create a StageAuthenticatorStatic resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] token_count: Defaults to `6`.
        :param pulumi.Input[float] token_length: Defaults to `12`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[StageAuthenticatorStaticArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a StageAuthenticatorStatic resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param StageAuthenticatorStaticArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(StageAuthenticatorStaticArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 configure_flow: Optional[pulumi.Input[str]] = None,
                 friendly_name: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 stage_authenticator_static_id: Optional[pulumi.Input[str]] = None,
                 token_count: Optional[pulumi.Input[float]] = None,
                 token_length: Optional[pulumi.Input[float]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = StageAuthenticatorStaticArgs.__new__(StageAuthenticatorStaticArgs)

            __props__.__dict__["configure_flow"] = configure_flow
            __props__.__dict__["friendly_name"] = friendly_name
            __props__.__dict__["name"] = name
            __props__.__dict__["stage_authenticator_static_id"] = stage_authenticator_static_id
            __props__.__dict__["token_count"] = token_count
            __props__.__dict__["token_length"] = token_length
        super(StageAuthenticatorStatic, __self__).__init__(
            'authentik:index/stageAuthenticatorStatic:StageAuthenticatorStatic',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            configure_flow: Optional[pulumi.Input[str]] = None,
            friendly_name: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            stage_authenticator_static_id: Optional[pulumi.Input[str]] = None,
            token_count: Optional[pulumi.Input[float]] = None,
            token_length: Optional[pulumi.Input[float]] = None) -> 'StageAuthenticatorStatic':
        """
        Get an existing StageAuthenticatorStatic resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] token_count: Defaults to `6`.
        :param pulumi.Input[float] token_length: Defaults to `12`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _StageAuthenticatorStaticState.__new__(_StageAuthenticatorStaticState)

        __props__.__dict__["configure_flow"] = configure_flow
        __props__.__dict__["friendly_name"] = friendly_name
        __props__.__dict__["name"] = name
        __props__.__dict__["stage_authenticator_static_id"] = stage_authenticator_static_id
        __props__.__dict__["token_count"] = token_count
        __props__.__dict__["token_length"] = token_length
        return StageAuthenticatorStatic(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="configureFlow")
    def configure_flow(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "configure_flow")

    @property
    @pulumi.getter(name="friendlyName")
    def friendly_name(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "friendly_name")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="stageAuthenticatorStaticId")
    def stage_authenticator_static_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "stage_authenticator_static_id")

    @property
    @pulumi.getter(name="tokenCount")
    def token_count(self) -> pulumi.Output[Optional[float]]:
        """
        Defaults to `6`.
        """
        return pulumi.get(self, "token_count")

    @property
    @pulumi.getter(name="tokenLength")
    def token_length(self) -> pulumi.Output[Optional[float]]:
        """
        Defaults to `12`.
        """
        return pulumi.get(self, "token_length")

