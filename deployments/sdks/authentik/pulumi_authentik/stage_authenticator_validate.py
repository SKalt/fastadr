# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['StageAuthenticatorValidateArgs', 'StageAuthenticatorValidate']

@pulumi.input_type
class StageAuthenticatorValidateArgs:
    def __init__(__self__, *,
                 not_configured_action: pulumi.Input[str],
                 configuration_stages: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 device_classes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 last_auth_threshold: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 stage_authenticator_validate_id: Optional[pulumi.Input[str]] = None,
                 webauthn_allowed_device_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 webauthn_user_verification: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a StageAuthenticatorValidate resource.
        :param pulumi.Input[str] not_configured_action: Allowed values: - `skip` - `deny` - `configure`
        :param pulumi.Input[str] last_auth_threshold: Defaults to `seconds=0`.
        :param pulumi.Input[str] webauthn_user_verification: Allowed values: - `required` - `preferred` - `discouraged` Defaults to `preferred`.
        """
        pulumi.set(__self__, "not_configured_action", not_configured_action)
        if configuration_stages is not None:
            pulumi.set(__self__, "configuration_stages", configuration_stages)
        if device_classes is not None:
            pulumi.set(__self__, "device_classes", device_classes)
        if last_auth_threshold is not None:
            pulumi.set(__self__, "last_auth_threshold", last_auth_threshold)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if stage_authenticator_validate_id is not None:
            pulumi.set(__self__, "stage_authenticator_validate_id", stage_authenticator_validate_id)
        if webauthn_allowed_device_types is not None:
            pulumi.set(__self__, "webauthn_allowed_device_types", webauthn_allowed_device_types)
        if webauthn_user_verification is not None:
            pulumi.set(__self__, "webauthn_user_verification", webauthn_user_verification)

    @property
    @pulumi.getter(name="notConfiguredAction")
    def not_configured_action(self) -> pulumi.Input[str]:
        """
        Allowed values: - `skip` - `deny` - `configure`
        """
        return pulumi.get(self, "not_configured_action")

    @not_configured_action.setter
    def not_configured_action(self, value: pulumi.Input[str]):
        pulumi.set(self, "not_configured_action", value)

    @property
    @pulumi.getter(name="configurationStages")
    def configuration_stages(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "configuration_stages")

    @configuration_stages.setter
    def configuration_stages(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "configuration_stages", value)

    @property
    @pulumi.getter(name="deviceClasses")
    def device_classes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "device_classes")

    @device_classes.setter
    def device_classes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "device_classes", value)

    @property
    @pulumi.getter(name="lastAuthThreshold")
    def last_auth_threshold(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `seconds=0`.
        """
        return pulumi.get(self, "last_auth_threshold")

    @last_auth_threshold.setter
    def last_auth_threshold(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_auth_threshold", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="stageAuthenticatorValidateId")
    def stage_authenticator_validate_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "stage_authenticator_validate_id")

    @stage_authenticator_validate_id.setter
    def stage_authenticator_validate_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "stage_authenticator_validate_id", value)

    @property
    @pulumi.getter(name="webauthnAllowedDeviceTypes")
    def webauthn_allowed_device_types(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "webauthn_allowed_device_types")

    @webauthn_allowed_device_types.setter
    def webauthn_allowed_device_types(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "webauthn_allowed_device_types", value)

    @property
    @pulumi.getter(name="webauthnUserVerification")
    def webauthn_user_verification(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `required` - `preferred` - `discouraged` Defaults to `preferred`.
        """
        return pulumi.get(self, "webauthn_user_verification")

    @webauthn_user_verification.setter
    def webauthn_user_verification(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "webauthn_user_verification", value)


@pulumi.input_type
class _StageAuthenticatorValidateState:
    def __init__(__self__, *,
                 configuration_stages: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 device_classes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 last_auth_threshold: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 not_configured_action: Optional[pulumi.Input[str]] = None,
                 stage_authenticator_validate_id: Optional[pulumi.Input[str]] = None,
                 webauthn_allowed_device_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 webauthn_user_verification: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering StageAuthenticatorValidate resources.
        :param pulumi.Input[str] last_auth_threshold: Defaults to `seconds=0`.
        :param pulumi.Input[str] not_configured_action: Allowed values: - `skip` - `deny` - `configure`
        :param pulumi.Input[str] webauthn_user_verification: Allowed values: - `required` - `preferred` - `discouraged` Defaults to `preferred`.
        """
        if configuration_stages is not None:
            pulumi.set(__self__, "configuration_stages", configuration_stages)
        if device_classes is not None:
            pulumi.set(__self__, "device_classes", device_classes)
        if last_auth_threshold is not None:
            pulumi.set(__self__, "last_auth_threshold", last_auth_threshold)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if not_configured_action is not None:
            pulumi.set(__self__, "not_configured_action", not_configured_action)
        if stage_authenticator_validate_id is not None:
            pulumi.set(__self__, "stage_authenticator_validate_id", stage_authenticator_validate_id)
        if webauthn_allowed_device_types is not None:
            pulumi.set(__self__, "webauthn_allowed_device_types", webauthn_allowed_device_types)
        if webauthn_user_verification is not None:
            pulumi.set(__self__, "webauthn_user_verification", webauthn_user_verification)

    @property
    @pulumi.getter(name="configurationStages")
    def configuration_stages(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "configuration_stages")

    @configuration_stages.setter
    def configuration_stages(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "configuration_stages", value)

    @property
    @pulumi.getter(name="deviceClasses")
    def device_classes(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "device_classes")

    @device_classes.setter
    def device_classes(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "device_classes", value)

    @property
    @pulumi.getter(name="lastAuthThreshold")
    def last_auth_threshold(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `seconds=0`.
        """
        return pulumi.get(self, "last_auth_threshold")

    @last_auth_threshold.setter
    def last_auth_threshold(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "last_auth_threshold", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="notConfiguredAction")
    def not_configured_action(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `skip` - `deny` - `configure`
        """
        return pulumi.get(self, "not_configured_action")

    @not_configured_action.setter
    def not_configured_action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "not_configured_action", value)

    @property
    @pulumi.getter(name="stageAuthenticatorValidateId")
    def stage_authenticator_validate_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "stage_authenticator_validate_id")

    @stage_authenticator_validate_id.setter
    def stage_authenticator_validate_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "stage_authenticator_validate_id", value)

    @property
    @pulumi.getter(name="webauthnAllowedDeviceTypes")
    def webauthn_allowed_device_types(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "webauthn_allowed_device_types")

    @webauthn_allowed_device_types.setter
    def webauthn_allowed_device_types(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "webauthn_allowed_device_types", value)

    @property
    @pulumi.getter(name="webauthnUserVerification")
    def webauthn_user_verification(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `required` - `preferred` - `discouraged` Defaults to `preferred`.
        """
        return pulumi.get(self, "webauthn_user_verification")

    @webauthn_user_verification.setter
    def webauthn_user_verification(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "webauthn_user_verification", value)


class StageAuthenticatorValidate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 configuration_stages: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 device_classes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 last_auth_threshold: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 not_configured_action: Optional[pulumi.Input[str]] = None,
                 stage_authenticator_validate_id: Optional[pulumi.Input[str]] = None,
                 webauthn_allowed_device_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 webauthn_user_verification: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a StageAuthenticatorValidate resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] last_auth_threshold: Defaults to `seconds=0`.
        :param pulumi.Input[str] not_configured_action: Allowed values: - `skip` - `deny` - `configure`
        :param pulumi.Input[str] webauthn_user_verification: Allowed values: - `required` - `preferred` - `discouraged` Defaults to `preferred`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: StageAuthenticatorValidateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a StageAuthenticatorValidate resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param StageAuthenticatorValidateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(StageAuthenticatorValidateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 configuration_stages: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 device_classes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 last_auth_threshold: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 not_configured_action: Optional[pulumi.Input[str]] = None,
                 stage_authenticator_validate_id: Optional[pulumi.Input[str]] = None,
                 webauthn_allowed_device_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 webauthn_user_verification: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = StageAuthenticatorValidateArgs.__new__(StageAuthenticatorValidateArgs)

            __props__.__dict__["configuration_stages"] = configuration_stages
            __props__.__dict__["device_classes"] = device_classes
            __props__.__dict__["last_auth_threshold"] = last_auth_threshold
            __props__.__dict__["name"] = name
            if not_configured_action is None and not opts.urn:
                raise TypeError("Missing required property 'not_configured_action'")
            __props__.__dict__["not_configured_action"] = not_configured_action
            __props__.__dict__["stage_authenticator_validate_id"] = stage_authenticator_validate_id
            __props__.__dict__["webauthn_allowed_device_types"] = webauthn_allowed_device_types
            __props__.__dict__["webauthn_user_verification"] = webauthn_user_verification
        super(StageAuthenticatorValidate, __self__).__init__(
            'authentik:index/stageAuthenticatorValidate:StageAuthenticatorValidate',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            configuration_stages: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            device_classes: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            last_auth_threshold: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            not_configured_action: Optional[pulumi.Input[str]] = None,
            stage_authenticator_validate_id: Optional[pulumi.Input[str]] = None,
            webauthn_allowed_device_types: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            webauthn_user_verification: Optional[pulumi.Input[str]] = None) -> 'StageAuthenticatorValidate':
        """
        Get an existing StageAuthenticatorValidate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] last_auth_threshold: Defaults to `seconds=0`.
        :param pulumi.Input[str] not_configured_action: Allowed values: - `skip` - `deny` - `configure`
        :param pulumi.Input[str] webauthn_user_verification: Allowed values: - `required` - `preferred` - `discouraged` Defaults to `preferred`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _StageAuthenticatorValidateState.__new__(_StageAuthenticatorValidateState)

        __props__.__dict__["configuration_stages"] = configuration_stages
        __props__.__dict__["device_classes"] = device_classes
        __props__.__dict__["last_auth_threshold"] = last_auth_threshold
        __props__.__dict__["name"] = name
        __props__.__dict__["not_configured_action"] = not_configured_action
        __props__.__dict__["stage_authenticator_validate_id"] = stage_authenticator_validate_id
        __props__.__dict__["webauthn_allowed_device_types"] = webauthn_allowed_device_types
        __props__.__dict__["webauthn_user_verification"] = webauthn_user_verification
        return StageAuthenticatorValidate(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="configurationStages")
    def configuration_stages(self) -> pulumi.Output[Optional[Sequence[str]]]:
        return pulumi.get(self, "configuration_stages")

    @property
    @pulumi.getter(name="deviceClasses")
    def device_classes(self) -> pulumi.Output[Optional[Sequence[str]]]:
        return pulumi.get(self, "device_classes")

    @property
    @pulumi.getter(name="lastAuthThreshold")
    def last_auth_threshold(self) -> pulumi.Output[Optional[str]]:
        """
        Defaults to `seconds=0`.
        """
        return pulumi.get(self, "last_auth_threshold")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="notConfiguredAction")
    def not_configured_action(self) -> pulumi.Output[str]:
        """
        Allowed values: - `skip` - `deny` - `configure`
        """
        return pulumi.get(self, "not_configured_action")

    @property
    @pulumi.getter(name="stageAuthenticatorValidateId")
    def stage_authenticator_validate_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "stage_authenticator_validate_id")

    @property
    @pulumi.getter(name="webauthnAllowedDeviceTypes")
    def webauthn_allowed_device_types(self) -> pulumi.Output[Optional[Sequence[str]]]:
        return pulumi.get(self, "webauthn_allowed_device_types")

    @property
    @pulumi.getter(name="webauthnUserVerification")
    def webauthn_user_verification(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `required` - `preferred` - `discouraged` Defaults to `preferred`.
        """
        return pulumi.get(self, "webauthn_user_verification")

