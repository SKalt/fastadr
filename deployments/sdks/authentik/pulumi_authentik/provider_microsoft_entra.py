# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['ProviderMicrosoftEntraArgs', 'ProviderMicrosoftEntra']

@pulumi.input_type
class ProviderMicrosoftEntraArgs:
    def __init__(__self__, *,
                 client_id: pulumi.Input[str],
                 client_secret: pulumi.Input[str],
                 tenant_id: pulumi.Input[str],
                 exclude_users_service_account: Optional[pulumi.Input[bool]] = None,
                 filter_group: Optional[pulumi.Input[str]] = None,
                 group_delete_action: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 property_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 property_mappings_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 provider_microsoft_entra_id: Optional[pulumi.Input[str]] = None,
                 user_delete_action: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a ProviderMicrosoftEntra resource.
        :param pulumi.Input[str] group_delete_action: Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        :param pulumi.Input[str] user_delete_action: Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        """
        pulumi.set(__self__, "client_id", client_id)
        pulumi.set(__self__, "client_secret", client_secret)
        pulumi.set(__self__, "tenant_id", tenant_id)
        if exclude_users_service_account is not None:
            pulumi.set(__self__, "exclude_users_service_account", exclude_users_service_account)
        if filter_group is not None:
            pulumi.set(__self__, "filter_group", filter_group)
        if group_delete_action is not None:
            pulumi.set(__self__, "group_delete_action", group_delete_action)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if property_mappings is not None:
            pulumi.set(__self__, "property_mappings", property_mappings)
        if property_mappings_groups is not None:
            pulumi.set(__self__, "property_mappings_groups", property_mappings_groups)
        if provider_microsoft_entra_id is not None:
            pulumi.set(__self__, "provider_microsoft_entra_id", provider_microsoft_entra_id)
        if user_delete_action is not None:
            pulumi.set(__self__, "user_delete_action", user_delete_action)

    @property
    @pulumi.getter(name="clientId")
    def client_id(self) -> pulumi.Input[str]:
        return pulumi.get(self, "client_id")

    @client_id.setter
    def client_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "client_id", value)

    @property
    @pulumi.getter(name="clientSecret")
    def client_secret(self) -> pulumi.Input[str]:
        return pulumi.get(self, "client_secret")

    @client_secret.setter
    def client_secret(self, value: pulumi.Input[str]):
        pulumi.set(self, "client_secret", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> pulumi.Input[str]:
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "tenant_id", value)

    @property
    @pulumi.getter(name="excludeUsersServiceAccount")
    def exclude_users_service_account(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "exclude_users_service_account")

    @exclude_users_service_account.setter
    def exclude_users_service_account(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exclude_users_service_account", value)

    @property
    @pulumi.getter(name="filterGroup")
    def filter_group(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "filter_group")

    @filter_group.setter
    def filter_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "filter_group", value)

    @property
    @pulumi.getter(name="groupDeleteAction")
    def group_delete_action(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        """
        return pulumi.get(self, "group_delete_action")

    @group_delete_action.setter
    def group_delete_action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_delete_action", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="propertyMappings")
    def property_mappings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "property_mappings")

    @property_mappings.setter
    def property_mappings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "property_mappings", value)

    @property
    @pulumi.getter(name="propertyMappingsGroups")
    def property_mappings_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "property_mappings_groups")

    @property_mappings_groups.setter
    def property_mappings_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "property_mappings_groups", value)

    @property
    @pulumi.getter(name="providerMicrosoftEntraId")
    def provider_microsoft_entra_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "provider_microsoft_entra_id")

    @provider_microsoft_entra_id.setter
    def provider_microsoft_entra_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "provider_microsoft_entra_id", value)

    @property
    @pulumi.getter(name="userDeleteAction")
    def user_delete_action(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        """
        return pulumi.get(self, "user_delete_action")

    @user_delete_action.setter
    def user_delete_action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_delete_action", value)


@pulumi.input_type
class _ProviderMicrosoftEntraState:
    def __init__(__self__, *,
                 client_id: Optional[pulumi.Input[str]] = None,
                 client_secret: Optional[pulumi.Input[str]] = None,
                 exclude_users_service_account: Optional[pulumi.Input[bool]] = None,
                 filter_group: Optional[pulumi.Input[str]] = None,
                 group_delete_action: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 property_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 property_mappings_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 provider_microsoft_entra_id: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 user_delete_action: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ProviderMicrosoftEntra resources.
        :param pulumi.Input[str] group_delete_action: Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        :param pulumi.Input[str] user_delete_action: Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        """
        if client_id is not None:
            pulumi.set(__self__, "client_id", client_id)
        if client_secret is not None:
            pulumi.set(__self__, "client_secret", client_secret)
        if exclude_users_service_account is not None:
            pulumi.set(__self__, "exclude_users_service_account", exclude_users_service_account)
        if filter_group is not None:
            pulumi.set(__self__, "filter_group", filter_group)
        if group_delete_action is not None:
            pulumi.set(__self__, "group_delete_action", group_delete_action)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if property_mappings is not None:
            pulumi.set(__self__, "property_mappings", property_mappings)
        if property_mappings_groups is not None:
            pulumi.set(__self__, "property_mappings_groups", property_mappings_groups)
        if provider_microsoft_entra_id is not None:
            pulumi.set(__self__, "provider_microsoft_entra_id", provider_microsoft_entra_id)
        if tenant_id is not None:
            pulumi.set(__self__, "tenant_id", tenant_id)
        if user_delete_action is not None:
            pulumi.set(__self__, "user_delete_action", user_delete_action)

    @property
    @pulumi.getter(name="clientId")
    def client_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "client_id")

    @client_id.setter
    def client_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "client_id", value)

    @property
    @pulumi.getter(name="clientSecret")
    def client_secret(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "client_secret")

    @client_secret.setter
    def client_secret(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "client_secret", value)

    @property
    @pulumi.getter(name="excludeUsersServiceAccount")
    def exclude_users_service_account(self) -> Optional[pulumi.Input[bool]]:
        return pulumi.get(self, "exclude_users_service_account")

    @exclude_users_service_account.setter
    def exclude_users_service_account(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "exclude_users_service_account", value)

    @property
    @pulumi.getter(name="filterGroup")
    def filter_group(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "filter_group")

    @filter_group.setter
    def filter_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "filter_group", value)

    @property
    @pulumi.getter(name="groupDeleteAction")
    def group_delete_action(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        """
        return pulumi.get(self, "group_delete_action")

    @group_delete_action.setter
    def group_delete_action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_delete_action", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="propertyMappings")
    def property_mappings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "property_mappings")

    @property_mappings.setter
    def property_mappings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "property_mappings", value)

    @property
    @pulumi.getter(name="propertyMappingsGroups")
    def property_mappings_groups(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "property_mappings_groups")

    @property_mappings_groups.setter
    def property_mappings_groups(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "property_mappings_groups", value)

    @property
    @pulumi.getter(name="providerMicrosoftEntraId")
    def provider_microsoft_entra_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "provider_microsoft_entra_id")

    @provider_microsoft_entra_id.setter
    def provider_microsoft_entra_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "provider_microsoft_entra_id", value)

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "tenant_id")

    @tenant_id.setter
    def tenant_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_id", value)

    @property
    @pulumi.getter(name="userDeleteAction")
    def user_delete_action(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        """
        return pulumi.get(self, "user_delete_action")

    @user_delete_action.setter
    def user_delete_action(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_delete_action", value)


class ProviderMicrosoftEntra(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 client_id: Optional[pulumi.Input[str]] = None,
                 client_secret: Optional[pulumi.Input[str]] = None,
                 exclude_users_service_account: Optional[pulumi.Input[bool]] = None,
                 filter_group: Optional[pulumi.Input[str]] = None,
                 group_delete_action: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 property_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 property_mappings_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 provider_microsoft_entra_id: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 user_delete_action: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a ProviderMicrosoftEntra resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] group_delete_action: Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        :param pulumi.Input[str] user_delete_action: Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ProviderMicrosoftEntraArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a ProviderMicrosoftEntra resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param ProviderMicrosoftEntraArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProviderMicrosoftEntraArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 client_id: Optional[pulumi.Input[str]] = None,
                 client_secret: Optional[pulumi.Input[str]] = None,
                 exclude_users_service_account: Optional[pulumi.Input[bool]] = None,
                 filter_group: Optional[pulumi.Input[str]] = None,
                 group_delete_action: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 property_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 property_mappings_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 provider_microsoft_entra_id: Optional[pulumi.Input[str]] = None,
                 tenant_id: Optional[pulumi.Input[str]] = None,
                 user_delete_action: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProviderMicrosoftEntraArgs.__new__(ProviderMicrosoftEntraArgs)

            if client_id is None and not opts.urn:
                raise TypeError("Missing required property 'client_id'")
            __props__.__dict__["client_id"] = client_id
            if client_secret is None and not opts.urn:
                raise TypeError("Missing required property 'client_secret'")
            __props__.__dict__["client_secret"] = None if client_secret is None else pulumi.Output.secret(client_secret)
            __props__.__dict__["exclude_users_service_account"] = exclude_users_service_account
            __props__.__dict__["filter_group"] = filter_group
            __props__.__dict__["group_delete_action"] = group_delete_action
            __props__.__dict__["name"] = name
            __props__.__dict__["property_mappings"] = property_mappings
            __props__.__dict__["property_mappings_groups"] = property_mappings_groups
            __props__.__dict__["provider_microsoft_entra_id"] = provider_microsoft_entra_id
            if tenant_id is None and not opts.urn:
                raise TypeError("Missing required property 'tenant_id'")
            __props__.__dict__["tenant_id"] = tenant_id
            __props__.__dict__["user_delete_action"] = user_delete_action
        secret_opts = pulumi.ResourceOptions(additional_secret_outputs=["clientSecret"])
        opts = pulumi.ResourceOptions.merge(opts, secret_opts)
        super(ProviderMicrosoftEntra, __self__).__init__(
            'authentik:index/providerMicrosoftEntra:ProviderMicrosoftEntra',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            client_id: Optional[pulumi.Input[str]] = None,
            client_secret: Optional[pulumi.Input[str]] = None,
            exclude_users_service_account: Optional[pulumi.Input[bool]] = None,
            filter_group: Optional[pulumi.Input[str]] = None,
            group_delete_action: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            property_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            property_mappings_groups: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            provider_microsoft_entra_id: Optional[pulumi.Input[str]] = None,
            tenant_id: Optional[pulumi.Input[str]] = None,
            user_delete_action: Optional[pulumi.Input[str]] = None) -> 'ProviderMicrosoftEntra':
        """
        Get an existing ProviderMicrosoftEntra resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] group_delete_action: Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        :param pulumi.Input[str] user_delete_action: Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ProviderMicrosoftEntraState.__new__(_ProviderMicrosoftEntraState)

        __props__.__dict__["client_id"] = client_id
        __props__.__dict__["client_secret"] = client_secret
        __props__.__dict__["exclude_users_service_account"] = exclude_users_service_account
        __props__.__dict__["filter_group"] = filter_group
        __props__.__dict__["group_delete_action"] = group_delete_action
        __props__.__dict__["name"] = name
        __props__.__dict__["property_mappings"] = property_mappings
        __props__.__dict__["property_mappings_groups"] = property_mappings_groups
        __props__.__dict__["provider_microsoft_entra_id"] = provider_microsoft_entra_id
        __props__.__dict__["tenant_id"] = tenant_id
        __props__.__dict__["user_delete_action"] = user_delete_action
        return ProviderMicrosoftEntra(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="clientId")
    def client_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "client_id")

    @property
    @pulumi.getter(name="clientSecret")
    def client_secret(self) -> pulumi.Output[str]:
        return pulumi.get(self, "client_secret")

    @property
    @pulumi.getter(name="excludeUsersServiceAccount")
    def exclude_users_service_account(self) -> pulumi.Output[Optional[bool]]:
        return pulumi.get(self, "exclude_users_service_account")

    @property
    @pulumi.getter(name="filterGroup")
    def filter_group(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "filter_group")

    @property
    @pulumi.getter(name="groupDeleteAction")
    def group_delete_action(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        """
        return pulumi.get(self, "group_delete_action")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="propertyMappings")
    def property_mappings(self) -> pulumi.Output[Optional[Sequence[str]]]:
        return pulumi.get(self, "property_mappings")

    @property
    @pulumi.getter(name="propertyMappingsGroups")
    def property_mappings_groups(self) -> pulumi.Output[Optional[Sequence[str]]]:
        return pulumi.get(self, "property_mappings_groups")

    @property
    @pulumi.getter(name="providerMicrosoftEntraId")
    def provider_microsoft_entra_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "provider_microsoft_entra_id")

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "tenant_id")

    @property
    @pulumi.getter(name="userDeleteAction")
    def user_delete_action(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `delete` - `do_nothing` Defaults to `delete`.
        """
        return pulumi.get(self, "user_delete_action")

