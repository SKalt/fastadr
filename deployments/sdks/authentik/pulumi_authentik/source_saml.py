# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['SourceSamlArgs', 'SourceSaml']

@pulumi.input_type
class SourceSamlArgs:
    def __init__(__self__, *,
                 pre_authentication_flow: pulumi.Input[str],
                 slug: pulumi.Input[str],
                 sso_url: pulumi.Input[str],
                 allow_idp_initiated: Optional[pulumi.Input[bool]] = None,
                 authentication_flow: Optional[pulumi.Input[str]] = None,
                 binding_type: Optional[pulumi.Input[str]] = None,
                 digest_algorithm: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 encryption_kp: Optional[pulumi.Input[str]] = None,
                 enrollment_flow: Optional[pulumi.Input[str]] = None,
                 group_matching_mode: Optional[pulumi.Input[str]] = None,
                 issuer: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 name_id_policy: Optional[pulumi.Input[str]] = None,
                 policy_engine_mode: Optional[pulumi.Input[str]] = None,
                 signature_algorithm: Optional[pulumi.Input[str]] = None,
                 signing_kp: Optional[pulumi.Input[str]] = None,
                 slo_url: Optional[pulumi.Input[str]] = None,
                 source_saml_id: Optional[pulumi.Input[str]] = None,
                 temporary_user_delete_after: Optional[pulumi.Input[str]] = None,
                 user_matching_mode: Optional[pulumi.Input[str]] = None,
                 user_path_template: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a SourceSaml resource.
        :param pulumi.Input[bool] allow_idp_initiated: Defaults to `false`.
        :param pulumi.Input[str] binding_type: Allowed values: - `REDIRECT` - `POST` - `POST_AUTO` Defaults to `REDIRECT`.
        :param pulumi.Input[str] digest_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
               `http://www.w3.org/2001/04/xmlenc#sha256`.
        :param pulumi.Input[bool] enabled: Defaults to `true`.
        :param pulumi.Input[str] group_matching_mode: Allowed values: - `identifier` - `name_link` - `name_deny` Defaults to `identifier`.
        :param pulumi.Input[str] name_id_policy: Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:transient` Defaults to
               `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.
        :param pulumi.Input[str] policy_engine_mode: Allowed values: - `all` - `any` Defaults to `any`.
        :param pulumi.Input[str] signature_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
               `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        :param pulumi.Input[str] temporary_user_delete_after: Defaults to `days=1`.
        :param pulumi.Input[str] user_matching_mode: Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny` Defaults to
               `identifier`.
        :param pulumi.Input[str] user_path_template: Defaults to `goauthentik.io/sources/%(slug)s`.
        :param pulumi.Input[str] uuid: Generated.
        """
        pulumi.set(__self__, "pre_authentication_flow", pre_authentication_flow)
        pulumi.set(__self__, "slug", slug)
        pulumi.set(__self__, "sso_url", sso_url)
        if allow_idp_initiated is not None:
            pulumi.set(__self__, "allow_idp_initiated", allow_idp_initiated)
        if authentication_flow is not None:
            pulumi.set(__self__, "authentication_flow", authentication_flow)
        if binding_type is not None:
            pulumi.set(__self__, "binding_type", binding_type)
        if digest_algorithm is not None:
            pulumi.set(__self__, "digest_algorithm", digest_algorithm)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if encryption_kp is not None:
            pulumi.set(__self__, "encryption_kp", encryption_kp)
        if enrollment_flow is not None:
            pulumi.set(__self__, "enrollment_flow", enrollment_flow)
        if group_matching_mode is not None:
            pulumi.set(__self__, "group_matching_mode", group_matching_mode)
        if issuer is not None:
            pulumi.set(__self__, "issuer", issuer)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if name_id_policy is not None:
            pulumi.set(__self__, "name_id_policy", name_id_policy)
        if policy_engine_mode is not None:
            pulumi.set(__self__, "policy_engine_mode", policy_engine_mode)
        if signature_algorithm is not None:
            pulumi.set(__self__, "signature_algorithm", signature_algorithm)
        if signing_kp is not None:
            pulumi.set(__self__, "signing_kp", signing_kp)
        if slo_url is not None:
            pulumi.set(__self__, "slo_url", slo_url)
        if source_saml_id is not None:
            pulumi.set(__self__, "source_saml_id", source_saml_id)
        if temporary_user_delete_after is not None:
            pulumi.set(__self__, "temporary_user_delete_after", temporary_user_delete_after)
        if user_matching_mode is not None:
            pulumi.set(__self__, "user_matching_mode", user_matching_mode)
        if user_path_template is not None:
            pulumi.set(__self__, "user_path_template", user_path_template)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)

    @property
    @pulumi.getter(name="preAuthenticationFlow")
    def pre_authentication_flow(self) -> pulumi.Input[str]:
        return pulumi.get(self, "pre_authentication_flow")

    @pre_authentication_flow.setter
    def pre_authentication_flow(self, value: pulumi.Input[str]):
        pulumi.set(self, "pre_authentication_flow", value)

    @property
    @pulumi.getter
    def slug(self) -> pulumi.Input[str]:
        return pulumi.get(self, "slug")

    @slug.setter
    def slug(self, value: pulumi.Input[str]):
        pulumi.set(self, "slug", value)

    @property
    @pulumi.getter(name="ssoUrl")
    def sso_url(self) -> pulumi.Input[str]:
        return pulumi.get(self, "sso_url")

    @sso_url.setter
    def sso_url(self, value: pulumi.Input[str]):
        pulumi.set(self, "sso_url", value)

    @property
    @pulumi.getter(name="allowIdpInitiated")
    def allow_idp_initiated(self) -> Optional[pulumi.Input[bool]]:
        """
        Defaults to `false`.
        """
        return pulumi.get(self, "allow_idp_initiated")

    @allow_idp_initiated.setter
    def allow_idp_initiated(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_idp_initiated", value)

    @property
    @pulumi.getter(name="authenticationFlow")
    def authentication_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "authentication_flow")

    @authentication_flow.setter
    def authentication_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_flow", value)

    @property
    @pulumi.getter(name="bindingType")
    def binding_type(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `REDIRECT` - `POST` - `POST_AUTO` Defaults to `REDIRECT`.
        """
        return pulumi.get(self, "binding_type")

    @binding_type.setter
    def binding_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "binding_type", value)

    @property
    @pulumi.getter(name="digestAlgorithm")
    def digest_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
        `http://www.w3.org/2001/04/xmlenc#sha256`.
        """
        return pulumi.get(self, "digest_algorithm")

    @digest_algorithm.setter
    def digest_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "digest_algorithm", value)

    @property
    @pulumi.getter
    def enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Defaults to `true`.
        """
        return pulumi.get(self, "enabled")

    @enabled.setter
    def enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enabled", value)

    @property
    @pulumi.getter(name="encryptionKp")
    def encryption_kp(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "encryption_kp")

    @encryption_kp.setter
    def encryption_kp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "encryption_kp", value)

    @property
    @pulumi.getter(name="enrollmentFlow")
    def enrollment_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "enrollment_flow")

    @enrollment_flow.setter
    def enrollment_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "enrollment_flow", value)

    @property
    @pulumi.getter(name="groupMatchingMode")
    def group_matching_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `identifier` - `name_link` - `name_deny` Defaults to `identifier`.
        """
        return pulumi.get(self, "group_matching_mode")

    @group_matching_mode.setter
    def group_matching_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_matching_mode", value)

    @property
    @pulumi.getter
    def issuer(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "issuer")

    @issuer.setter
    def issuer(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "issuer", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="nameIdPolicy")
    def name_id_policy(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -
        `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -
        `urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -
        `urn:oasis:names:tc:SAML:2.0:nameid-format:transient` Defaults to
        `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.
        """
        return pulumi.get(self, "name_id_policy")

    @name_id_policy.setter
    def name_id_policy(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name_id_policy", value)

    @property
    @pulumi.getter(name="policyEngineMode")
    def policy_engine_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `all` - `any` Defaults to `any`.
        """
        return pulumi.get(self, "policy_engine_mode")

    @policy_engine_mode.setter
    def policy_engine_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "policy_engine_mode", value)

    @property
    @pulumi.getter(name="signatureAlgorithm")
    def signature_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
        `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        """
        return pulumi.get(self, "signature_algorithm")

    @signature_algorithm.setter
    def signature_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "signature_algorithm", value)

    @property
    @pulumi.getter(name="signingKp")
    def signing_kp(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "signing_kp")

    @signing_kp.setter
    def signing_kp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "signing_kp", value)

    @property
    @pulumi.getter(name="sloUrl")
    def slo_url(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "slo_url")

    @slo_url.setter
    def slo_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slo_url", value)

    @property
    @pulumi.getter(name="sourceSamlId")
    def source_saml_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "source_saml_id")

    @source_saml_id.setter
    def source_saml_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_saml_id", value)

    @property
    @pulumi.getter(name="temporaryUserDeleteAfter")
    def temporary_user_delete_after(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `days=1`.
        """
        return pulumi.get(self, "temporary_user_delete_after")

    @temporary_user_delete_after.setter
    def temporary_user_delete_after(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "temporary_user_delete_after", value)

    @property
    @pulumi.getter(name="userMatchingMode")
    def user_matching_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny` Defaults to
        `identifier`.
        """
        return pulumi.get(self, "user_matching_mode")

    @user_matching_mode.setter
    def user_matching_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_matching_mode", value)

    @property
    @pulumi.getter(name="userPathTemplate")
    def user_path_template(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `goauthentik.io/sources/%(slug)s`.
        """
        return pulumi.get(self, "user_path_template")

    @user_path_template.setter
    def user_path_template(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_path_template", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)


@pulumi.input_type
class _SourceSamlState:
    def __init__(__self__, *,
                 allow_idp_initiated: Optional[pulumi.Input[bool]] = None,
                 authentication_flow: Optional[pulumi.Input[str]] = None,
                 binding_type: Optional[pulumi.Input[str]] = None,
                 digest_algorithm: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 encryption_kp: Optional[pulumi.Input[str]] = None,
                 enrollment_flow: Optional[pulumi.Input[str]] = None,
                 group_matching_mode: Optional[pulumi.Input[str]] = None,
                 issuer: Optional[pulumi.Input[str]] = None,
                 metadata: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 name_id_policy: Optional[pulumi.Input[str]] = None,
                 policy_engine_mode: Optional[pulumi.Input[str]] = None,
                 pre_authentication_flow: Optional[pulumi.Input[str]] = None,
                 signature_algorithm: Optional[pulumi.Input[str]] = None,
                 signing_kp: Optional[pulumi.Input[str]] = None,
                 slo_url: Optional[pulumi.Input[str]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 source_saml_id: Optional[pulumi.Input[str]] = None,
                 sso_url: Optional[pulumi.Input[str]] = None,
                 temporary_user_delete_after: Optional[pulumi.Input[str]] = None,
                 user_matching_mode: Optional[pulumi.Input[str]] = None,
                 user_path_template: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering SourceSaml resources.
        :param pulumi.Input[bool] allow_idp_initiated: Defaults to `false`.
        :param pulumi.Input[str] binding_type: Allowed values: - `REDIRECT` - `POST` - `POST_AUTO` Defaults to `REDIRECT`.
        :param pulumi.Input[str] digest_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
               `http://www.w3.org/2001/04/xmlenc#sha256`.
        :param pulumi.Input[bool] enabled: Defaults to `true`.
        :param pulumi.Input[str] group_matching_mode: Allowed values: - `identifier` - `name_link` - `name_deny` Defaults to `identifier`.
        :param pulumi.Input[str] metadata: SAML Metadata Generated.
        :param pulumi.Input[str] name_id_policy: Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:transient` Defaults to
               `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.
        :param pulumi.Input[str] policy_engine_mode: Allowed values: - `all` - `any` Defaults to `any`.
        :param pulumi.Input[str] signature_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
               `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        :param pulumi.Input[str] temporary_user_delete_after: Defaults to `days=1`.
        :param pulumi.Input[str] user_matching_mode: Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny` Defaults to
               `identifier`.
        :param pulumi.Input[str] user_path_template: Defaults to `goauthentik.io/sources/%(slug)s`.
        :param pulumi.Input[str] uuid: Generated.
        """
        if allow_idp_initiated is not None:
            pulumi.set(__self__, "allow_idp_initiated", allow_idp_initiated)
        if authentication_flow is not None:
            pulumi.set(__self__, "authentication_flow", authentication_flow)
        if binding_type is not None:
            pulumi.set(__self__, "binding_type", binding_type)
        if digest_algorithm is not None:
            pulumi.set(__self__, "digest_algorithm", digest_algorithm)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if encryption_kp is not None:
            pulumi.set(__self__, "encryption_kp", encryption_kp)
        if enrollment_flow is not None:
            pulumi.set(__self__, "enrollment_flow", enrollment_flow)
        if group_matching_mode is not None:
            pulumi.set(__self__, "group_matching_mode", group_matching_mode)
        if issuer is not None:
            pulumi.set(__self__, "issuer", issuer)
        if metadata is not None:
            pulumi.set(__self__, "metadata", metadata)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if name_id_policy is not None:
            pulumi.set(__self__, "name_id_policy", name_id_policy)
        if policy_engine_mode is not None:
            pulumi.set(__self__, "policy_engine_mode", policy_engine_mode)
        if pre_authentication_flow is not None:
            pulumi.set(__self__, "pre_authentication_flow", pre_authentication_flow)
        if signature_algorithm is not None:
            pulumi.set(__self__, "signature_algorithm", signature_algorithm)
        if signing_kp is not None:
            pulumi.set(__self__, "signing_kp", signing_kp)
        if slo_url is not None:
            pulumi.set(__self__, "slo_url", slo_url)
        if slug is not None:
            pulumi.set(__self__, "slug", slug)
        if source_saml_id is not None:
            pulumi.set(__self__, "source_saml_id", source_saml_id)
        if sso_url is not None:
            pulumi.set(__self__, "sso_url", sso_url)
        if temporary_user_delete_after is not None:
            pulumi.set(__self__, "temporary_user_delete_after", temporary_user_delete_after)
        if user_matching_mode is not None:
            pulumi.set(__self__, "user_matching_mode", user_matching_mode)
        if user_path_template is not None:
            pulumi.set(__self__, "user_path_template", user_path_template)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)

    @property
    @pulumi.getter(name="allowIdpInitiated")
    def allow_idp_initiated(self) -> Optional[pulumi.Input[bool]]:
        """
        Defaults to `false`.
        """
        return pulumi.get(self, "allow_idp_initiated")

    @allow_idp_initiated.setter
    def allow_idp_initiated(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_idp_initiated", value)

    @property
    @pulumi.getter(name="authenticationFlow")
    def authentication_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "authentication_flow")

    @authentication_flow.setter
    def authentication_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_flow", value)

    @property
    @pulumi.getter(name="bindingType")
    def binding_type(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `REDIRECT` - `POST` - `POST_AUTO` Defaults to `REDIRECT`.
        """
        return pulumi.get(self, "binding_type")

    @binding_type.setter
    def binding_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "binding_type", value)

    @property
    @pulumi.getter(name="digestAlgorithm")
    def digest_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
        `http://www.w3.org/2001/04/xmlenc#sha256`.
        """
        return pulumi.get(self, "digest_algorithm")

    @digest_algorithm.setter
    def digest_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "digest_algorithm", value)

    @property
    @pulumi.getter
    def enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Defaults to `true`.
        """
        return pulumi.get(self, "enabled")

    @enabled.setter
    def enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enabled", value)

    @property
    @pulumi.getter(name="encryptionKp")
    def encryption_kp(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "encryption_kp")

    @encryption_kp.setter
    def encryption_kp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "encryption_kp", value)

    @property
    @pulumi.getter(name="enrollmentFlow")
    def enrollment_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "enrollment_flow")

    @enrollment_flow.setter
    def enrollment_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "enrollment_flow", value)

    @property
    @pulumi.getter(name="groupMatchingMode")
    def group_matching_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `identifier` - `name_link` - `name_deny` Defaults to `identifier`.
        """
        return pulumi.get(self, "group_matching_mode")

    @group_matching_mode.setter
    def group_matching_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "group_matching_mode", value)

    @property
    @pulumi.getter
    def issuer(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "issuer")

    @issuer.setter
    def issuer(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "issuer", value)

    @property
    @pulumi.getter
    def metadata(self) -> Optional[pulumi.Input[str]]:
        """
        SAML Metadata Generated.
        """
        return pulumi.get(self, "metadata")

    @metadata.setter
    def metadata(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "metadata", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="nameIdPolicy")
    def name_id_policy(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -
        `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -
        `urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -
        `urn:oasis:names:tc:SAML:2.0:nameid-format:transient` Defaults to
        `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.
        """
        return pulumi.get(self, "name_id_policy")

    @name_id_policy.setter
    def name_id_policy(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name_id_policy", value)

    @property
    @pulumi.getter(name="policyEngineMode")
    def policy_engine_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `all` - `any` Defaults to `any`.
        """
        return pulumi.get(self, "policy_engine_mode")

    @policy_engine_mode.setter
    def policy_engine_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "policy_engine_mode", value)

    @property
    @pulumi.getter(name="preAuthenticationFlow")
    def pre_authentication_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "pre_authentication_flow")

    @pre_authentication_flow.setter
    def pre_authentication_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "pre_authentication_flow", value)

    @property
    @pulumi.getter(name="signatureAlgorithm")
    def signature_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
        `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        """
        return pulumi.get(self, "signature_algorithm")

    @signature_algorithm.setter
    def signature_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "signature_algorithm", value)

    @property
    @pulumi.getter(name="signingKp")
    def signing_kp(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "signing_kp")

    @signing_kp.setter
    def signing_kp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "signing_kp", value)

    @property
    @pulumi.getter(name="sloUrl")
    def slo_url(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "slo_url")

    @slo_url.setter
    def slo_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slo_url", value)

    @property
    @pulumi.getter
    def slug(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "slug")

    @slug.setter
    def slug(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "slug", value)

    @property
    @pulumi.getter(name="sourceSamlId")
    def source_saml_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "source_saml_id")

    @source_saml_id.setter
    def source_saml_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_saml_id", value)

    @property
    @pulumi.getter(name="ssoUrl")
    def sso_url(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "sso_url")

    @sso_url.setter
    def sso_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sso_url", value)

    @property
    @pulumi.getter(name="temporaryUserDeleteAfter")
    def temporary_user_delete_after(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `days=1`.
        """
        return pulumi.get(self, "temporary_user_delete_after")

    @temporary_user_delete_after.setter
    def temporary_user_delete_after(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "temporary_user_delete_after", value)

    @property
    @pulumi.getter(name="userMatchingMode")
    def user_matching_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny` Defaults to
        `identifier`.
        """
        return pulumi.get(self, "user_matching_mode")

    @user_matching_mode.setter
    def user_matching_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_matching_mode", value)

    @property
    @pulumi.getter(name="userPathTemplate")
    def user_path_template(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `goauthentik.io/sources/%(slug)s`.
        """
        return pulumi.get(self, "user_path_template")

    @user_path_template.setter
    def user_path_template(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_path_template", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)


class SourceSaml(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allow_idp_initiated: Optional[pulumi.Input[bool]] = None,
                 authentication_flow: Optional[pulumi.Input[str]] = None,
                 binding_type: Optional[pulumi.Input[str]] = None,
                 digest_algorithm: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 encryption_kp: Optional[pulumi.Input[str]] = None,
                 enrollment_flow: Optional[pulumi.Input[str]] = None,
                 group_matching_mode: Optional[pulumi.Input[str]] = None,
                 issuer: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 name_id_policy: Optional[pulumi.Input[str]] = None,
                 policy_engine_mode: Optional[pulumi.Input[str]] = None,
                 pre_authentication_flow: Optional[pulumi.Input[str]] = None,
                 signature_algorithm: Optional[pulumi.Input[str]] = None,
                 signing_kp: Optional[pulumi.Input[str]] = None,
                 slo_url: Optional[pulumi.Input[str]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 source_saml_id: Optional[pulumi.Input[str]] = None,
                 sso_url: Optional[pulumi.Input[str]] = None,
                 temporary_user_delete_after: Optional[pulumi.Input[str]] = None,
                 user_matching_mode: Optional[pulumi.Input[str]] = None,
                 user_path_template: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a SourceSaml resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] allow_idp_initiated: Defaults to `false`.
        :param pulumi.Input[str] binding_type: Allowed values: - `REDIRECT` - `POST` - `POST_AUTO` Defaults to `REDIRECT`.
        :param pulumi.Input[str] digest_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
               `http://www.w3.org/2001/04/xmlenc#sha256`.
        :param pulumi.Input[bool] enabled: Defaults to `true`.
        :param pulumi.Input[str] group_matching_mode: Allowed values: - `identifier` - `name_link` - `name_deny` Defaults to `identifier`.
        :param pulumi.Input[str] name_id_policy: Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:transient` Defaults to
               `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.
        :param pulumi.Input[str] policy_engine_mode: Allowed values: - `all` - `any` Defaults to `any`.
        :param pulumi.Input[str] signature_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
               `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        :param pulumi.Input[str] temporary_user_delete_after: Defaults to `days=1`.
        :param pulumi.Input[str] user_matching_mode: Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny` Defaults to
               `identifier`.
        :param pulumi.Input[str] user_path_template: Defaults to `goauthentik.io/sources/%(slug)s`.
        :param pulumi.Input[str] uuid: Generated.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: SourceSamlArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a SourceSaml resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param SourceSamlArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(SourceSamlArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allow_idp_initiated: Optional[pulumi.Input[bool]] = None,
                 authentication_flow: Optional[pulumi.Input[str]] = None,
                 binding_type: Optional[pulumi.Input[str]] = None,
                 digest_algorithm: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 encryption_kp: Optional[pulumi.Input[str]] = None,
                 enrollment_flow: Optional[pulumi.Input[str]] = None,
                 group_matching_mode: Optional[pulumi.Input[str]] = None,
                 issuer: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 name_id_policy: Optional[pulumi.Input[str]] = None,
                 policy_engine_mode: Optional[pulumi.Input[str]] = None,
                 pre_authentication_flow: Optional[pulumi.Input[str]] = None,
                 signature_algorithm: Optional[pulumi.Input[str]] = None,
                 signing_kp: Optional[pulumi.Input[str]] = None,
                 slo_url: Optional[pulumi.Input[str]] = None,
                 slug: Optional[pulumi.Input[str]] = None,
                 source_saml_id: Optional[pulumi.Input[str]] = None,
                 sso_url: Optional[pulumi.Input[str]] = None,
                 temporary_user_delete_after: Optional[pulumi.Input[str]] = None,
                 user_matching_mode: Optional[pulumi.Input[str]] = None,
                 user_path_template: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = SourceSamlArgs.__new__(SourceSamlArgs)

            __props__.__dict__["allow_idp_initiated"] = allow_idp_initiated
            __props__.__dict__["authentication_flow"] = authentication_flow
            __props__.__dict__["binding_type"] = binding_type
            __props__.__dict__["digest_algorithm"] = digest_algorithm
            __props__.__dict__["enabled"] = enabled
            __props__.__dict__["encryption_kp"] = encryption_kp
            __props__.__dict__["enrollment_flow"] = enrollment_flow
            __props__.__dict__["group_matching_mode"] = group_matching_mode
            __props__.__dict__["issuer"] = issuer
            __props__.__dict__["name"] = name
            __props__.__dict__["name_id_policy"] = name_id_policy
            __props__.__dict__["policy_engine_mode"] = policy_engine_mode
            if pre_authentication_flow is None and not opts.urn:
                raise TypeError("Missing required property 'pre_authentication_flow'")
            __props__.__dict__["pre_authentication_flow"] = pre_authentication_flow
            __props__.__dict__["signature_algorithm"] = signature_algorithm
            __props__.__dict__["signing_kp"] = signing_kp
            __props__.__dict__["slo_url"] = slo_url
            if slug is None and not opts.urn:
                raise TypeError("Missing required property 'slug'")
            __props__.__dict__["slug"] = slug
            __props__.__dict__["source_saml_id"] = source_saml_id
            if sso_url is None and not opts.urn:
                raise TypeError("Missing required property 'sso_url'")
            __props__.__dict__["sso_url"] = sso_url
            __props__.__dict__["temporary_user_delete_after"] = temporary_user_delete_after
            __props__.__dict__["user_matching_mode"] = user_matching_mode
            __props__.__dict__["user_path_template"] = user_path_template
            __props__.__dict__["uuid"] = uuid
            __props__.__dict__["metadata"] = None
        super(SourceSaml, __self__).__init__(
            'authentik:index/sourceSaml:SourceSaml',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            allow_idp_initiated: Optional[pulumi.Input[bool]] = None,
            authentication_flow: Optional[pulumi.Input[str]] = None,
            binding_type: Optional[pulumi.Input[str]] = None,
            digest_algorithm: Optional[pulumi.Input[str]] = None,
            enabled: Optional[pulumi.Input[bool]] = None,
            encryption_kp: Optional[pulumi.Input[str]] = None,
            enrollment_flow: Optional[pulumi.Input[str]] = None,
            group_matching_mode: Optional[pulumi.Input[str]] = None,
            issuer: Optional[pulumi.Input[str]] = None,
            metadata: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            name_id_policy: Optional[pulumi.Input[str]] = None,
            policy_engine_mode: Optional[pulumi.Input[str]] = None,
            pre_authentication_flow: Optional[pulumi.Input[str]] = None,
            signature_algorithm: Optional[pulumi.Input[str]] = None,
            signing_kp: Optional[pulumi.Input[str]] = None,
            slo_url: Optional[pulumi.Input[str]] = None,
            slug: Optional[pulumi.Input[str]] = None,
            source_saml_id: Optional[pulumi.Input[str]] = None,
            sso_url: Optional[pulumi.Input[str]] = None,
            temporary_user_delete_after: Optional[pulumi.Input[str]] = None,
            user_matching_mode: Optional[pulumi.Input[str]] = None,
            user_path_template: Optional[pulumi.Input[str]] = None,
            uuid: Optional[pulumi.Input[str]] = None) -> 'SourceSaml':
        """
        Get an existing SourceSaml resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] allow_idp_initiated: Defaults to `false`.
        :param pulumi.Input[str] binding_type: Allowed values: - `REDIRECT` - `POST` - `POST_AUTO` Defaults to `REDIRECT`.
        :param pulumi.Input[str] digest_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
               `http://www.w3.org/2001/04/xmlenc#sha256`.
        :param pulumi.Input[bool] enabled: Defaults to `true`.
        :param pulumi.Input[str] group_matching_mode: Allowed values: - `identifier` - `name_link` - `name_deny` Defaults to `identifier`.
        :param pulumi.Input[str] metadata: SAML Metadata Generated.
        :param pulumi.Input[str] name_id_policy: Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -
               `urn:oasis:names:tc:SAML:2.0:nameid-format:transient` Defaults to
               `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.
        :param pulumi.Input[str] policy_engine_mode: Allowed values: - `all` - `any` Defaults to `any`.
        :param pulumi.Input[str] signature_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
               `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        :param pulumi.Input[str] temporary_user_delete_after: Defaults to `days=1`.
        :param pulumi.Input[str] user_matching_mode: Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny` Defaults to
               `identifier`.
        :param pulumi.Input[str] user_path_template: Defaults to `goauthentik.io/sources/%(slug)s`.
        :param pulumi.Input[str] uuid: Generated.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _SourceSamlState.__new__(_SourceSamlState)

        __props__.__dict__["allow_idp_initiated"] = allow_idp_initiated
        __props__.__dict__["authentication_flow"] = authentication_flow
        __props__.__dict__["binding_type"] = binding_type
        __props__.__dict__["digest_algorithm"] = digest_algorithm
        __props__.__dict__["enabled"] = enabled
        __props__.__dict__["encryption_kp"] = encryption_kp
        __props__.__dict__["enrollment_flow"] = enrollment_flow
        __props__.__dict__["group_matching_mode"] = group_matching_mode
        __props__.__dict__["issuer"] = issuer
        __props__.__dict__["metadata"] = metadata
        __props__.__dict__["name"] = name
        __props__.__dict__["name_id_policy"] = name_id_policy
        __props__.__dict__["policy_engine_mode"] = policy_engine_mode
        __props__.__dict__["pre_authentication_flow"] = pre_authentication_flow
        __props__.__dict__["signature_algorithm"] = signature_algorithm
        __props__.__dict__["signing_kp"] = signing_kp
        __props__.__dict__["slo_url"] = slo_url
        __props__.__dict__["slug"] = slug
        __props__.__dict__["source_saml_id"] = source_saml_id
        __props__.__dict__["sso_url"] = sso_url
        __props__.__dict__["temporary_user_delete_after"] = temporary_user_delete_after
        __props__.__dict__["user_matching_mode"] = user_matching_mode
        __props__.__dict__["user_path_template"] = user_path_template
        __props__.__dict__["uuid"] = uuid
        return SourceSaml(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="allowIdpInitiated")
    def allow_idp_initiated(self) -> pulumi.Output[Optional[bool]]:
        """
        Defaults to `false`.
        """
        return pulumi.get(self, "allow_idp_initiated")

    @property
    @pulumi.getter(name="authenticationFlow")
    def authentication_flow(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "authentication_flow")

    @property
    @pulumi.getter(name="bindingType")
    def binding_type(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `REDIRECT` - `POST` - `POST_AUTO` Defaults to `REDIRECT`.
        """
        return pulumi.get(self, "binding_type")

    @property
    @pulumi.getter(name="digestAlgorithm")
    def digest_algorithm(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
        `http://www.w3.org/2001/04/xmlenc#sha256`.
        """
        return pulumi.get(self, "digest_algorithm")

    @property
    @pulumi.getter
    def enabled(self) -> pulumi.Output[Optional[bool]]:
        """
        Defaults to `true`.
        """
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter(name="encryptionKp")
    def encryption_kp(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "encryption_kp")

    @property
    @pulumi.getter(name="enrollmentFlow")
    def enrollment_flow(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "enrollment_flow")

    @property
    @pulumi.getter(name="groupMatchingMode")
    def group_matching_mode(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `identifier` - `name_link` - `name_deny` Defaults to `identifier`.
        """
        return pulumi.get(self, "group_matching_mode")

    @property
    @pulumi.getter
    def issuer(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "issuer")

    @property
    @pulumi.getter
    def metadata(self) -> pulumi.Output[str]:
        """
        SAML Metadata Generated.
        """
        return pulumi.get(self, "metadata")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="nameIdPolicy")
    def name_id_policy(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress` -
        `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent` - `urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName` -
        `urn:oasis:names:tc:SAML:2.0:nameid-format:WindowsDomainQualifiedName` -
        `urn:oasis:names:tc:SAML:2.0:nameid-format:transient` Defaults to
        `urn:oasis:names:tc:SAML:2.0:nameid-format:persistent`.
        """
        return pulumi.get(self, "name_id_policy")

    @property
    @pulumi.getter(name="policyEngineMode")
    def policy_engine_mode(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `all` - `any` Defaults to `any`.
        """
        return pulumi.get(self, "policy_engine_mode")

    @property
    @pulumi.getter(name="preAuthenticationFlow")
    def pre_authentication_flow(self) -> pulumi.Output[str]:
        return pulumi.get(self, "pre_authentication_flow")

    @property
    @pulumi.getter(name="signatureAlgorithm")
    def signature_algorithm(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
        `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        """
        return pulumi.get(self, "signature_algorithm")

    @property
    @pulumi.getter(name="signingKp")
    def signing_kp(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "signing_kp")

    @property
    @pulumi.getter(name="sloUrl")
    def slo_url(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "slo_url")

    @property
    @pulumi.getter
    def slug(self) -> pulumi.Output[str]:
        return pulumi.get(self, "slug")

    @property
    @pulumi.getter(name="sourceSamlId")
    def source_saml_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "source_saml_id")

    @property
    @pulumi.getter(name="ssoUrl")
    def sso_url(self) -> pulumi.Output[str]:
        return pulumi.get(self, "sso_url")

    @property
    @pulumi.getter(name="temporaryUserDeleteAfter")
    def temporary_user_delete_after(self) -> pulumi.Output[Optional[str]]:
        """
        Defaults to `days=1`.
        """
        return pulumi.get(self, "temporary_user_delete_after")

    @property
    @pulumi.getter(name="userMatchingMode")
    def user_matching_mode(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `identifier` - `email_link` - `email_deny` - `username_link` - `username_deny` Defaults to
        `identifier`.
        """
        return pulumi.get(self, "user_matching_mode")

    @property
    @pulumi.getter(name="userPathTemplate")
    def user_path_template(self) -> pulumi.Output[Optional[str]]:
        """
        Defaults to `goauthentik.io/sources/%(slug)s`.
        """
        return pulumi.get(self, "user_path_template")

    @property
    @pulumi.getter
    def uuid(self) -> pulumi.Output[str]:
        """
        Generated.
        """
        return pulumi.get(self, "uuid")

