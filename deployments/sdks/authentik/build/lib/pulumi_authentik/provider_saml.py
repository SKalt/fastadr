# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['ProviderSamlArgs', 'ProviderSaml']

@pulumi.input_type
class ProviderSamlArgs:
    def __init__(__self__, *,
                 acs_url: pulumi.Input[str],
                 authorization_flow: pulumi.Input[str],
                 invalidation_flow: pulumi.Input[str],
                 assertion_valid_not_before: Optional[pulumi.Input[str]] = None,
                 assertion_valid_not_on_or_after: Optional[pulumi.Input[str]] = None,
                 audience: Optional[pulumi.Input[str]] = None,
                 authentication_flow: Optional[pulumi.Input[str]] = None,
                 default_relay_state: Optional[pulumi.Input[str]] = None,
                 digest_algorithm: Optional[pulumi.Input[str]] = None,
                 encryption_kp: Optional[pulumi.Input[str]] = None,
                 issuer: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 name_id_mapping: Optional[pulumi.Input[str]] = None,
                 property_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 provider_saml_id: Optional[pulumi.Input[str]] = None,
                 session_valid_not_on_or_after: Optional[pulumi.Input[str]] = None,
                 sign_assertion: Optional[pulumi.Input[bool]] = None,
                 sign_response: Optional[pulumi.Input[bool]] = None,
                 signature_algorithm: Optional[pulumi.Input[str]] = None,
                 signing_kp: Optional[pulumi.Input[str]] = None,
                 sp_binding: Optional[pulumi.Input[str]] = None,
                 url_slo_post: Optional[pulumi.Input[str]] = None,
                 url_slo_redirect: Optional[pulumi.Input[str]] = None,
                 url_sso_init: Optional[pulumi.Input[str]] = None,
                 url_sso_post: Optional[pulumi.Input[str]] = None,
                 url_sso_redirect: Optional[pulumi.Input[str]] = None,
                 verification_kp: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a ProviderSaml resource.
        :param pulumi.Input[str] assertion_valid_not_before: Defaults to `minutes=-5`.
        :param pulumi.Input[str] assertion_valid_not_on_or_after: Defaults to `minutes=5`.
        :param pulumi.Input[str] audience: Defaults to ``.
        :param pulumi.Input[str] default_relay_state: Defaults to ``.
        :param pulumi.Input[str] digest_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
               `http://www.w3.org/2001/04/xmlenc#sha256`.
        :param pulumi.Input[str] issuer: Defaults to `authentik`.
        :param pulumi.Input[str] session_valid_not_on_or_after: Defaults to `minutes=86400`.
        :param pulumi.Input[bool] sign_assertion: Defaults to `true`.
        :param pulumi.Input[bool] sign_response: Defaults to `false`.
        :param pulumi.Input[str] signature_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
               `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        :param pulumi.Input[str] sp_binding: Allowed values: - `redirect` - `post` Defaults to `redirect`.
        :param pulumi.Input[str] url_slo_post: Generated.
        :param pulumi.Input[str] url_slo_redirect: Generated.
        :param pulumi.Input[str] url_sso_init: Generated.
        :param pulumi.Input[str] url_sso_post: Generated.
        :param pulumi.Input[str] url_sso_redirect: Generated.
        """
        pulumi.set(__self__, "acs_url", acs_url)
        pulumi.set(__self__, "authorization_flow", authorization_flow)
        pulumi.set(__self__, "invalidation_flow", invalidation_flow)
        if assertion_valid_not_before is not None:
            pulumi.set(__self__, "assertion_valid_not_before", assertion_valid_not_before)
        if assertion_valid_not_on_or_after is not None:
            pulumi.set(__self__, "assertion_valid_not_on_or_after", assertion_valid_not_on_or_after)
        if audience is not None:
            pulumi.set(__self__, "audience", audience)
        if authentication_flow is not None:
            pulumi.set(__self__, "authentication_flow", authentication_flow)
        if default_relay_state is not None:
            pulumi.set(__self__, "default_relay_state", default_relay_state)
        if digest_algorithm is not None:
            pulumi.set(__self__, "digest_algorithm", digest_algorithm)
        if encryption_kp is not None:
            pulumi.set(__self__, "encryption_kp", encryption_kp)
        if issuer is not None:
            pulumi.set(__self__, "issuer", issuer)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if name_id_mapping is not None:
            pulumi.set(__self__, "name_id_mapping", name_id_mapping)
        if property_mappings is not None:
            pulumi.set(__self__, "property_mappings", property_mappings)
        if provider_saml_id is not None:
            pulumi.set(__self__, "provider_saml_id", provider_saml_id)
        if session_valid_not_on_or_after is not None:
            pulumi.set(__self__, "session_valid_not_on_or_after", session_valid_not_on_or_after)
        if sign_assertion is not None:
            pulumi.set(__self__, "sign_assertion", sign_assertion)
        if sign_response is not None:
            pulumi.set(__self__, "sign_response", sign_response)
        if signature_algorithm is not None:
            pulumi.set(__self__, "signature_algorithm", signature_algorithm)
        if signing_kp is not None:
            pulumi.set(__self__, "signing_kp", signing_kp)
        if sp_binding is not None:
            pulumi.set(__self__, "sp_binding", sp_binding)
        if url_slo_post is not None:
            pulumi.set(__self__, "url_slo_post", url_slo_post)
        if url_slo_redirect is not None:
            pulumi.set(__self__, "url_slo_redirect", url_slo_redirect)
        if url_sso_init is not None:
            pulumi.set(__self__, "url_sso_init", url_sso_init)
        if url_sso_post is not None:
            pulumi.set(__self__, "url_sso_post", url_sso_post)
        if url_sso_redirect is not None:
            pulumi.set(__self__, "url_sso_redirect", url_sso_redirect)
        if verification_kp is not None:
            pulumi.set(__self__, "verification_kp", verification_kp)

    @property
    @pulumi.getter(name="acsUrl")
    def acs_url(self) -> pulumi.Input[str]:
        return pulumi.get(self, "acs_url")

    @acs_url.setter
    def acs_url(self, value: pulumi.Input[str]):
        pulumi.set(self, "acs_url", value)

    @property
    @pulumi.getter(name="authorizationFlow")
    def authorization_flow(self) -> pulumi.Input[str]:
        return pulumi.get(self, "authorization_flow")

    @authorization_flow.setter
    def authorization_flow(self, value: pulumi.Input[str]):
        pulumi.set(self, "authorization_flow", value)

    @property
    @pulumi.getter(name="invalidationFlow")
    def invalidation_flow(self) -> pulumi.Input[str]:
        return pulumi.get(self, "invalidation_flow")

    @invalidation_flow.setter
    def invalidation_flow(self, value: pulumi.Input[str]):
        pulumi.set(self, "invalidation_flow", value)

    @property
    @pulumi.getter(name="assertionValidNotBefore")
    def assertion_valid_not_before(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `minutes=-5`.
        """
        return pulumi.get(self, "assertion_valid_not_before")

    @assertion_valid_not_before.setter
    def assertion_valid_not_before(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "assertion_valid_not_before", value)

    @property
    @pulumi.getter(name="assertionValidNotOnOrAfter")
    def assertion_valid_not_on_or_after(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `minutes=5`.
        """
        return pulumi.get(self, "assertion_valid_not_on_or_after")

    @assertion_valid_not_on_or_after.setter
    def assertion_valid_not_on_or_after(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "assertion_valid_not_on_or_after", value)

    @property
    @pulumi.getter
    def audience(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to ``.
        """
        return pulumi.get(self, "audience")

    @audience.setter
    def audience(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "audience", value)

    @property
    @pulumi.getter(name="authenticationFlow")
    def authentication_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "authentication_flow")

    @authentication_flow.setter
    def authentication_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_flow", value)

    @property
    @pulumi.getter(name="defaultRelayState")
    def default_relay_state(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to ``.
        """
        return pulumi.get(self, "default_relay_state")

    @default_relay_state.setter
    def default_relay_state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "default_relay_state", value)

    @property
    @pulumi.getter(name="digestAlgorithm")
    def digest_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
        `http://www.w3.org/2001/04/xmlenc#sha256`.
        """
        return pulumi.get(self, "digest_algorithm")

    @digest_algorithm.setter
    def digest_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "digest_algorithm", value)

    @property
    @pulumi.getter(name="encryptionKp")
    def encryption_kp(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "encryption_kp")

    @encryption_kp.setter
    def encryption_kp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "encryption_kp", value)

    @property
    @pulumi.getter
    def issuer(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `authentik`.
        """
        return pulumi.get(self, "issuer")

    @issuer.setter
    def issuer(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "issuer", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="nameIdMapping")
    def name_id_mapping(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name_id_mapping")

    @name_id_mapping.setter
    def name_id_mapping(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name_id_mapping", value)

    @property
    @pulumi.getter(name="propertyMappings")
    def property_mappings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "property_mappings")

    @property_mappings.setter
    def property_mappings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "property_mappings", value)

    @property
    @pulumi.getter(name="providerSamlId")
    def provider_saml_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "provider_saml_id")

    @provider_saml_id.setter
    def provider_saml_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "provider_saml_id", value)

    @property
    @pulumi.getter(name="sessionValidNotOnOrAfter")
    def session_valid_not_on_or_after(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `minutes=86400`.
        """
        return pulumi.get(self, "session_valid_not_on_or_after")

    @session_valid_not_on_or_after.setter
    def session_valid_not_on_or_after(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "session_valid_not_on_or_after", value)

    @property
    @pulumi.getter(name="signAssertion")
    def sign_assertion(self) -> Optional[pulumi.Input[bool]]:
        """
        Defaults to `true`.
        """
        return pulumi.get(self, "sign_assertion")

    @sign_assertion.setter
    def sign_assertion(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sign_assertion", value)

    @property
    @pulumi.getter(name="signResponse")
    def sign_response(self) -> Optional[pulumi.Input[bool]]:
        """
        Defaults to `false`.
        """
        return pulumi.get(self, "sign_response")

    @sign_response.setter
    def sign_response(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sign_response", value)

    @property
    @pulumi.getter(name="signatureAlgorithm")
    def signature_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
        `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        """
        return pulumi.get(self, "signature_algorithm")

    @signature_algorithm.setter
    def signature_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "signature_algorithm", value)

    @property
    @pulumi.getter(name="signingKp")
    def signing_kp(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "signing_kp")

    @signing_kp.setter
    def signing_kp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "signing_kp", value)

    @property
    @pulumi.getter(name="spBinding")
    def sp_binding(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `redirect` - `post` Defaults to `redirect`.
        """
        return pulumi.get(self, "sp_binding")

    @sp_binding.setter
    def sp_binding(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sp_binding", value)

    @property
    @pulumi.getter(name="urlSloPost")
    def url_slo_post(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "url_slo_post")

    @url_slo_post.setter
    def url_slo_post(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_slo_post", value)

    @property
    @pulumi.getter(name="urlSloRedirect")
    def url_slo_redirect(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "url_slo_redirect")

    @url_slo_redirect.setter
    def url_slo_redirect(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_slo_redirect", value)

    @property
    @pulumi.getter(name="urlSsoInit")
    def url_sso_init(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "url_sso_init")

    @url_sso_init.setter
    def url_sso_init(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_sso_init", value)

    @property
    @pulumi.getter(name="urlSsoPost")
    def url_sso_post(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "url_sso_post")

    @url_sso_post.setter
    def url_sso_post(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_sso_post", value)

    @property
    @pulumi.getter(name="urlSsoRedirect")
    def url_sso_redirect(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "url_sso_redirect")

    @url_sso_redirect.setter
    def url_sso_redirect(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_sso_redirect", value)

    @property
    @pulumi.getter(name="verificationKp")
    def verification_kp(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "verification_kp")

    @verification_kp.setter
    def verification_kp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "verification_kp", value)


@pulumi.input_type
class _ProviderSamlState:
    def __init__(__self__, *,
                 acs_url: Optional[pulumi.Input[str]] = None,
                 assertion_valid_not_before: Optional[pulumi.Input[str]] = None,
                 assertion_valid_not_on_or_after: Optional[pulumi.Input[str]] = None,
                 audience: Optional[pulumi.Input[str]] = None,
                 authentication_flow: Optional[pulumi.Input[str]] = None,
                 authorization_flow: Optional[pulumi.Input[str]] = None,
                 default_relay_state: Optional[pulumi.Input[str]] = None,
                 digest_algorithm: Optional[pulumi.Input[str]] = None,
                 encryption_kp: Optional[pulumi.Input[str]] = None,
                 invalidation_flow: Optional[pulumi.Input[str]] = None,
                 issuer: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 name_id_mapping: Optional[pulumi.Input[str]] = None,
                 property_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 provider_saml_id: Optional[pulumi.Input[str]] = None,
                 session_valid_not_on_or_after: Optional[pulumi.Input[str]] = None,
                 sign_assertion: Optional[pulumi.Input[bool]] = None,
                 sign_response: Optional[pulumi.Input[bool]] = None,
                 signature_algorithm: Optional[pulumi.Input[str]] = None,
                 signing_kp: Optional[pulumi.Input[str]] = None,
                 sp_binding: Optional[pulumi.Input[str]] = None,
                 url_slo_post: Optional[pulumi.Input[str]] = None,
                 url_slo_redirect: Optional[pulumi.Input[str]] = None,
                 url_sso_init: Optional[pulumi.Input[str]] = None,
                 url_sso_post: Optional[pulumi.Input[str]] = None,
                 url_sso_redirect: Optional[pulumi.Input[str]] = None,
                 verification_kp: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ProviderSaml resources.
        :param pulumi.Input[str] assertion_valid_not_before: Defaults to `minutes=-5`.
        :param pulumi.Input[str] assertion_valid_not_on_or_after: Defaults to `minutes=5`.
        :param pulumi.Input[str] audience: Defaults to ``.
        :param pulumi.Input[str] default_relay_state: Defaults to ``.
        :param pulumi.Input[str] digest_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
               `http://www.w3.org/2001/04/xmlenc#sha256`.
        :param pulumi.Input[str] issuer: Defaults to `authentik`.
        :param pulumi.Input[str] session_valid_not_on_or_after: Defaults to `minutes=86400`.
        :param pulumi.Input[bool] sign_assertion: Defaults to `true`.
        :param pulumi.Input[bool] sign_response: Defaults to `false`.
        :param pulumi.Input[str] signature_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
               `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        :param pulumi.Input[str] sp_binding: Allowed values: - `redirect` - `post` Defaults to `redirect`.
        :param pulumi.Input[str] url_slo_post: Generated.
        :param pulumi.Input[str] url_slo_redirect: Generated.
        :param pulumi.Input[str] url_sso_init: Generated.
        :param pulumi.Input[str] url_sso_post: Generated.
        :param pulumi.Input[str] url_sso_redirect: Generated.
        """
        if acs_url is not None:
            pulumi.set(__self__, "acs_url", acs_url)
        if assertion_valid_not_before is not None:
            pulumi.set(__self__, "assertion_valid_not_before", assertion_valid_not_before)
        if assertion_valid_not_on_or_after is not None:
            pulumi.set(__self__, "assertion_valid_not_on_or_after", assertion_valid_not_on_or_after)
        if audience is not None:
            pulumi.set(__self__, "audience", audience)
        if authentication_flow is not None:
            pulumi.set(__self__, "authentication_flow", authentication_flow)
        if authorization_flow is not None:
            pulumi.set(__self__, "authorization_flow", authorization_flow)
        if default_relay_state is not None:
            pulumi.set(__self__, "default_relay_state", default_relay_state)
        if digest_algorithm is not None:
            pulumi.set(__self__, "digest_algorithm", digest_algorithm)
        if encryption_kp is not None:
            pulumi.set(__self__, "encryption_kp", encryption_kp)
        if invalidation_flow is not None:
            pulumi.set(__self__, "invalidation_flow", invalidation_flow)
        if issuer is not None:
            pulumi.set(__self__, "issuer", issuer)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if name_id_mapping is not None:
            pulumi.set(__self__, "name_id_mapping", name_id_mapping)
        if property_mappings is not None:
            pulumi.set(__self__, "property_mappings", property_mappings)
        if provider_saml_id is not None:
            pulumi.set(__self__, "provider_saml_id", provider_saml_id)
        if session_valid_not_on_or_after is not None:
            pulumi.set(__self__, "session_valid_not_on_or_after", session_valid_not_on_or_after)
        if sign_assertion is not None:
            pulumi.set(__self__, "sign_assertion", sign_assertion)
        if sign_response is not None:
            pulumi.set(__self__, "sign_response", sign_response)
        if signature_algorithm is not None:
            pulumi.set(__self__, "signature_algorithm", signature_algorithm)
        if signing_kp is not None:
            pulumi.set(__self__, "signing_kp", signing_kp)
        if sp_binding is not None:
            pulumi.set(__self__, "sp_binding", sp_binding)
        if url_slo_post is not None:
            pulumi.set(__self__, "url_slo_post", url_slo_post)
        if url_slo_redirect is not None:
            pulumi.set(__self__, "url_slo_redirect", url_slo_redirect)
        if url_sso_init is not None:
            pulumi.set(__self__, "url_sso_init", url_sso_init)
        if url_sso_post is not None:
            pulumi.set(__self__, "url_sso_post", url_sso_post)
        if url_sso_redirect is not None:
            pulumi.set(__self__, "url_sso_redirect", url_sso_redirect)
        if verification_kp is not None:
            pulumi.set(__self__, "verification_kp", verification_kp)

    @property
    @pulumi.getter(name="acsUrl")
    def acs_url(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "acs_url")

    @acs_url.setter
    def acs_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "acs_url", value)

    @property
    @pulumi.getter(name="assertionValidNotBefore")
    def assertion_valid_not_before(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `minutes=-5`.
        """
        return pulumi.get(self, "assertion_valid_not_before")

    @assertion_valid_not_before.setter
    def assertion_valid_not_before(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "assertion_valid_not_before", value)

    @property
    @pulumi.getter(name="assertionValidNotOnOrAfter")
    def assertion_valid_not_on_or_after(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `minutes=5`.
        """
        return pulumi.get(self, "assertion_valid_not_on_or_after")

    @assertion_valid_not_on_or_after.setter
    def assertion_valid_not_on_or_after(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "assertion_valid_not_on_or_after", value)

    @property
    @pulumi.getter
    def audience(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to ``.
        """
        return pulumi.get(self, "audience")

    @audience.setter
    def audience(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "audience", value)

    @property
    @pulumi.getter(name="authenticationFlow")
    def authentication_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "authentication_flow")

    @authentication_flow.setter
    def authentication_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authentication_flow", value)

    @property
    @pulumi.getter(name="authorizationFlow")
    def authorization_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "authorization_flow")

    @authorization_flow.setter
    def authorization_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "authorization_flow", value)

    @property
    @pulumi.getter(name="defaultRelayState")
    def default_relay_state(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to ``.
        """
        return pulumi.get(self, "default_relay_state")

    @default_relay_state.setter
    def default_relay_state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "default_relay_state", value)

    @property
    @pulumi.getter(name="digestAlgorithm")
    def digest_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
        `http://www.w3.org/2001/04/xmlenc#sha256`.
        """
        return pulumi.get(self, "digest_algorithm")

    @digest_algorithm.setter
    def digest_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "digest_algorithm", value)

    @property
    @pulumi.getter(name="encryptionKp")
    def encryption_kp(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "encryption_kp")

    @encryption_kp.setter
    def encryption_kp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "encryption_kp", value)

    @property
    @pulumi.getter(name="invalidationFlow")
    def invalidation_flow(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "invalidation_flow")

    @invalidation_flow.setter
    def invalidation_flow(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "invalidation_flow", value)

    @property
    @pulumi.getter
    def issuer(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `authentik`.
        """
        return pulumi.get(self, "issuer")

    @issuer.setter
    def issuer(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "issuer", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="nameIdMapping")
    def name_id_mapping(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "name_id_mapping")

    @name_id_mapping.setter
    def name_id_mapping(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name_id_mapping", value)

    @property
    @pulumi.getter(name="propertyMappings")
    def property_mappings(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "property_mappings")

    @property_mappings.setter
    def property_mappings(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "property_mappings", value)

    @property
    @pulumi.getter(name="providerSamlId")
    def provider_saml_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "provider_saml_id")

    @provider_saml_id.setter
    def provider_saml_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "provider_saml_id", value)

    @property
    @pulumi.getter(name="sessionValidNotOnOrAfter")
    def session_valid_not_on_or_after(self) -> Optional[pulumi.Input[str]]:
        """
        Defaults to `minutes=86400`.
        """
        return pulumi.get(self, "session_valid_not_on_or_after")

    @session_valid_not_on_or_after.setter
    def session_valid_not_on_or_after(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "session_valid_not_on_or_after", value)

    @property
    @pulumi.getter(name="signAssertion")
    def sign_assertion(self) -> Optional[pulumi.Input[bool]]:
        """
        Defaults to `true`.
        """
        return pulumi.get(self, "sign_assertion")

    @sign_assertion.setter
    def sign_assertion(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sign_assertion", value)

    @property
    @pulumi.getter(name="signResponse")
    def sign_response(self) -> Optional[pulumi.Input[bool]]:
        """
        Defaults to `false`.
        """
        return pulumi.get(self, "sign_response")

    @sign_response.setter
    def sign_response(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "sign_response", value)

    @property
    @pulumi.getter(name="signatureAlgorithm")
    def signature_algorithm(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
        `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        """
        return pulumi.get(self, "signature_algorithm")

    @signature_algorithm.setter
    def signature_algorithm(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "signature_algorithm", value)

    @property
    @pulumi.getter(name="signingKp")
    def signing_kp(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "signing_kp")

    @signing_kp.setter
    def signing_kp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "signing_kp", value)

    @property
    @pulumi.getter(name="spBinding")
    def sp_binding(self) -> Optional[pulumi.Input[str]]:
        """
        Allowed values: - `redirect` - `post` Defaults to `redirect`.
        """
        return pulumi.get(self, "sp_binding")

    @sp_binding.setter
    def sp_binding(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sp_binding", value)

    @property
    @pulumi.getter(name="urlSloPost")
    def url_slo_post(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "url_slo_post")

    @url_slo_post.setter
    def url_slo_post(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_slo_post", value)

    @property
    @pulumi.getter(name="urlSloRedirect")
    def url_slo_redirect(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "url_slo_redirect")

    @url_slo_redirect.setter
    def url_slo_redirect(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_slo_redirect", value)

    @property
    @pulumi.getter(name="urlSsoInit")
    def url_sso_init(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "url_sso_init")

    @url_sso_init.setter
    def url_sso_init(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_sso_init", value)

    @property
    @pulumi.getter(name="urlSsoPost")
    def url_sso_post(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "url_sso_post")

    @url_sso_post.setter
    def url_sso_post(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_sso_post", value)

    @property
    @pulumi.getter(name="urlSsoRedirect")
    def url_sso_redirect(self) -> Optional[pulumi.Input[str]]:
        """
        Generated.
        """
        return pulumi.get(self, "url_sso_redirect")

    @url_sso_redirect.setter
    def url_sso_redirect(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "url_sso_redirect", value)

    @property
    @pulumi.getter(name="verificationKp")
    def verification_kp(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "verification_kp")

    @verification_kp.setter
    def verification_kp(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "verification_kp", value)


class ProviderSaml(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 acs_url: Optional[pulumi.Input[str]] = None,
                 assertion_valid_not_before: Optional[pulumi.Input[str]] = None,
                 assertion_valid_not_on_or_after: Optional[pulumi.Input[str]] = None,
                 audience: Optional[pulumi.Input[str]] = None,
                 authentication_flow: Optional[pulumi.Input[str]] = None,
                 authorization_flow: Optional[pulumi.Input[str]] = None,
                 default_relay_state: Optional[pulumi.Input[str]] = None,
                 digest_algorithm: Optional[pulumi.Input[str]] = None,
                 encryption_kp: Optional[pulumi.Input[str]] = None,
                 invalidation_flow: Optional[pulumi.Input[str]] = None,
                 issuer: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 name_id_mapping: Optional[pulumi.Input[str]] = None,
                 property_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 provider_saml_id: Optional[pulumi.Input[str]] = None,
                 session_valid_not_on_or_after: Optional[pulumi.Input[str]] = None,
                 sign_assertion: Optional[pulumi.Input[bool]] = None,
                 sign_response: Optional[pulumi.Input[bool]] = None,
                 signature_algorithm: Optional[pulumi.Input[str]] = None,
                 signing_kp: Optional[pulumi.Input[str]] = None,
                 sp_binding: Optional[pulumi.Input[str]] = None,
                 url_slo_post: Optional[pulumi.Input[str]] = None,
                 url_slo_redirect: Optional[pulumi.Input[str]] = None,
                 url_sso_init: Optional[pulumi.Input[str]] = None,
                 url_sso_post: Optional[pulumi.Input[str]] = None,
                 url_sso_redirect: Optional[pulumi.Input[str]] = None,
                 verification_kp: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a ProviderSaml resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] assertion_valid_not_before: Defaults to `minutes=-5`.
        :param pulumi.Input[str] assertion_valid_not_on_or_after: Defaults to `minutes=5`.
        :param pulumi.Input[str] audience: Defaults to ``.
        :param pulumi.Input[str] default_relay_state: Defaults to ``.
        :param pulumi.Input[str] digest_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
               `http://www.w3.org/2001/04/xmlenc#sha256`.
        :param pulumi.Input[str] issuer: Defaults to `authentik`.
        :param pulumi.Input[str] session_valid_not_on_or_after: Defaults to `minutes=86400`.
        :param pulumi.Input[bool] sign_assertion: Defaults to `true`.
        :param pulumi.Input[bool] sign_response: Defaults to `false`.
        :param pulumi.Input[str] signature_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
               `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        :param pulumi.Input[str] sp_binding: Allowed values: - `redirect` - `post` Defaults to `redirect`.
        :param pulumi.Input[str] url_slo_post: Generated.
        :param pulumi.Input[str] url_slo_redirect: Generated.
        :param pulumi.Input[str] url_sso_init: Generated.
        :param pulumi.Input[str] url_sso_post: Generated.
        :param pulumi.Input[str] url_sso_redirect: Generated.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ProviderSamlArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a ProviderSaml resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param ProviderSamlArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ProviderSamlArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 acs_url: Optional[pulumi.Input[str]] = None,
                 assertion_valid_not_before: Optional[pulumi.Input[str]] = None,
                 assertion_valid_not_on_or_after: Optional[pulumi.Input[str]] = None,
                 audience: Optional[pulumi.Input[str]] = None,
                 authentication_flow: Optional[pulumi.Input[str]] = None,
                 authorization_flow: Optional[pulumi.Input[str]] = None,
                 default_relay_state: Optional[pulumi.Input[str]] = None,
                 digest_algorithm: Optional[pulumi.Input[str]] = None,
                 encryption_kp: Optional[pulumi.Input[str]] = None,
                 invalidation_flow: Optional[pulumi.Input[str]] = None,
                 issuer: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 name_id_mapping: Optional[pulumi.Input[str]] = None,
                 property_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 provider_saml_id: Optional[pulumi.Input[str]] = None,
                 session_valid_not_on_or_after: Optional[pulumi.Input[str]] = None,
                 sign_assertion: Optional[pulumi.Input[bool]] = None,
                 sign_response: Optional[pulumi.Input[bool]] = None,
                 signature_algorithm: Optional[pulumi.Input[str]] = None,
                 signing_kp: Optional[pulumi.Input[str]] = None,
                 sp_binding: Optional[pulumi.Input[str]] = None,
                 url_slo_post: Optional[pulumi.Input[str]] = None,
                 url_slo_redirect: Optional[pulumi.Input[str]] = None,
                 url_sso_init: Optional[pulumi.Input[str]] = None,
                 url_sso_post: Optional[pulumi.Input[str]] = None,
                 url_sso_redirect: Optional[pulumi.Input[str]] = None,
                 verification_kp: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ProviderSamlArgs.__new__(ProviderSamlArgs)

            if acs_url is None and not opts.urn:
                raise TypeError("Missing required property 'acs_url'")
            __props__.__dict__["acs_url"] = acs_url
            __props__.__dict__["assertion_valid_not_before"] = assertion_valid_not_before
            __props__.__dict__["assertion_valid_not_on_or_after"] = assertion_valid_not_on_or_after
            __props__.__dict__["audience"] = audience
            __props__.__dict__["authentication_flow"] = authentication_flow
            if authorization_flow is None and not opts.urn:
                raise TypeError("Missing required property 'authorization_flow'")
            __props__.__dict__["authorization_flow"] = authorization_flow
            __props__.__dict__["default_relay_state"] = default_relay_state
            __props__.__dict__["digest_algorithm"] = digest_algorithm
            __props__.__dict__["encryption_kp"] = encryption_kp
            if invalidation_flow is None and not opts.urn:
                raise TypeError("Missing required property 'invalidation_flow'")
            __props__.__dict__["invalidation_flow"] = invalidation_flow
            __props__.__dict__["issuer"] = issuer
            __props__.__dict__["name"] = name
            __props__.__dict__["name_id_mapping"] = name_id_mapping
            __props__.__dict__["property_mappings"] = property_mappings
            __props__.__dict__["provider_saml_id"] = provider_saml_id
            __props__.__dict__["session_valid_not_on_or_after"] = session_valid_not_on_or_after
            __props__.__dict__["sign_assertion"] = sign_assertion
            __props__.__dict__["sign_response"] = sign_response
            __props__.__dict__["signature_algorithm"] = signature_algorithm
            __props__.__dict__["signing_kp"] = signing_kp
            __props__.__dict__["sp_binding"] = sp_binding
            __props__.__dict__["url_slo_post"] = url_slo_post
            __props__.__dict__["url_slo_redirect"] = url_slo_redirect
            __props__.__dict__["url_sso_init"] = url_sso_init
            __props__.__dict__["url_sso_post"] = url_sso_post
            __props__.__dict__["url_sso_redirect"] = url_sso_redirect
            __props__.__dict__["verification_kp"] = verification_kp
        super(ProviderSaml, __self__).__init__(
            'authentik:index/providerSaml:ProviderSaml',
            resource_name,
            __props__,
            opts,
            package_ref=_utilities.get_package())

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            acs_url: Optional[pulumi.Input[str]] = None,
            assertion_valid_not_before: Optional[pulumi.Input[str]] = None,
            assertion_valid_not_on_or_after: Optional[pulumi.Input[str]] = None,
            audience: Optional[pulumi.Input[str]] = None,
            authentication_flow: Optional[pulumi.Input[str]] = None,
            authorization_flow: Optional[pulumi.Input[str]] = None,
            default_relay_state: Optional[pulumi.Input[str]] = None,
            digest_algorithm: Optional[pulumi.Input[str]] = None,
            encryption_kp: Optional[pulumi.Input[str]] = None,
            invalidation_flow: Optional[pulumi.Input[str]] = None,
            issuer: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            name_id_mapping: Optional[pulumi.Input[str]] = None,
            property_mappings: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            provider_saml_id: Optional[pulumi.Input[str]] = None,
            session_valid_not_on_or_after: Optional[pulumi.Input[str]] = None,
            sign_assertion: Optional[pulumi.Input[bool]] = None,
            sign_response: Optional[pulumi.Input[bool]] = None,
            signature_algorithm: Optional[pulumi.Input[str]] = None,
            signing_kp: Optional[pulumi.Input[str]] = None,
            sp_binding: Optional[pulumi.Input[str]] = None,
            url_slo_post: Optional[pulumi.Input[str]] = None,
            url_slo_redirect: Optional[pulumi.Input[str]] = None,
            url_sso_init: Optional[pulumi.Input[str]] = None,
            url_sso_post: Optional[pulumi.Input[str]] = None,
            url_sso_redirect: Optional[pulumi.Input[str]] = None,
            verification_kp: Optional[pulumi.Input[str]] = None) -> 'ProviderSaml':
        """
        Get an existing ProviderSaml resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] assertion_valid_not_before: Defaults to `minutes=-5`.
        :param pulumi.Input[str] assertion_valid_not_on_or_after: Defaults to `minutes=5`.
        :param pulumi.Input[str] audience: Defaults to ``.
        :param pulumi.Input[str] default_relay_state: Defaults to ``.
        :param pulumi.Input[str] digest_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
               `http://www.w3.org/2001/04/xmlenc#sha256`.
        :param pulumi.Input[str] issuer: Defaults to `authentik`.
        :param pulumi.Input[str] session_valid_not_on_or_after: Defaults to `minutes=86400`.
        :param pulumi.Input[bool] sign_assertion: Defaults to `true`.
        :param pulumi.Input[bool] sign_response: Defaults to `false`.
        :param pulumi.Input[str] signature_algorithm: Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
               `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
               `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        :param pulumi.Input[str] sp_binding: Allowed values: - `redirect` - `post` Defaults to `redirect`.
        :param pulumi.Input[str] url_slo_post: Generated.
        :param pulumi.Input[str] url_slo_redirect: Generated.
        :param pulumi.Input[str] url_sso_init: Generated.
        :param pulumi.Input[str] url_sso_post: Generated.
        :param pulumi.Input[str] url_sso_redirect: Generated.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ProviderSamlState.__new__(_ProviderSamlState)

        __props__.__dict__["acs_url"] = acs_url
        __props__.__dict__["assertion_valid_not_before"] = assertion_valid_not_before
        __props__.__dict__["assertion_valid_not_on_or_after"] = assertion_valid_not_on_or_after
        __props__.__dict__["audience"] = audience
        __props__.__dict__["authentication_flow"] = authentication_flow
        __props__.__dict__["authorization_flow"] = authorization_flow
        __props__.__dict__["default_relay_state"] = default_relay_state
        __props__.__dict__["digest_algorithm"] = digest_algorithm
        __props__.__dict__["encryption_kp"] = encryption_kp
        __props__.__dict__["invalidation_flow"] = invalidation_flow
        __props__.__dict__["issuer"] = issuer
        __props__.__dict__["name"] = name
        __props__.__dict__["name_id_mapping"] = name_id_mapping
        __props__.__dict__["property_mappings"] = property_mappings
        __props__.__dict__["provider_saml_id"] = provider_saml_id
        __props__.__dict__["session_valid_not_on_or_after"] = session_valid_not_on_or_after
        __props__.__dict__["sign_assertion"] = sign_assertion
        __props__.__dict__["sign_response"] = sign_response
        __props__.__dict__["signature_algorithm"] = signature_algorithm
        __props__.__dict__["signing_kp"] = signing_kp
        __props__.__dict__["sp_binding"] = sp_binding
        __props__.__dict__["url_slo_post"] = url_slo_post
        __props__.__dict__["url_slo_redirect"] = url_slo_redirect
        __props__.__dict__["url_sso_init"] = url_sso_init
        __props__.__dict__["url_sso_post"] = url_sso_post
        __props__.__dict__["url_sso_redirect"] = url_sso_redirect
        __props__.__dict__["verification_kp"] = verification_kp
        return ProviderSaml(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="acsUrl")
    def acs_url(self) -> pulumi.Output[str]:
        return pulumi.get(self, "acs_url")

    @property
    @pulumi.getter(name="assertionValidNotBefore")
    def assertion_valid_not_before(self) -> pulumi.Output[Optional[str]]:
        """
        Defaults to `minutes=-5`.
        """
        return pulumi.get(self, "assertion_valid_not_before")

    @property
    @pulumi.getter(name="assertionValidNotOnOrAfter")
    def assertion_valid_not_on_or_after(self) -> pulumi.Output[Optional[str]]:
        """
        Defaults to `minutes=5`.
        """
        return pulumi.get(self, "assertion_valid_not_on_or_after")

    @property
    @pulumi.getter
    def audience(self) -> pulumi.Output[Optional[str]]:
        """
        Defaults to ``.
        """
        return pulumi.get(self, "audience")

    @property
    @pulumi.getter(name="authenticationFlow")
    def authentication_flow(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "authentication_flow")

    @property
    @pulumi.getter(name="authorizationFlow")
    def authorization_flow(self) -> pulumi.Output[str]:
        return pulumi.get(self, "authorization_flow")

    @property
    @pulumi.getter(name="defaultRelayState")
    def default_relay_state(self) -> pulumi.Output[Optional[str]]:
        """
        Defaults to ``.
        """
        return pulumi.get(self, "default_relay_state")

    @property
    @pulumi.getter(name="digestAlgorithm")
    def digest_algorithm(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#sha1` - `http://www.w3.org/2001/04/xmlenc#sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#sha384` - `http://www.w3.org/2001/04/xmlenc#sha512` Defaults to
        `http://www.w3.org/2001/04/xmlenc#sha256`.
        """
        return pulumi.get(self, "digest_algorithm")

    @property
    @pulumi.getter(name="encryptionKp")
    def encryption_kp(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "encryption_kp")

    @property
    @pulumi.getter(name="invalidationFlow")
    def invalidation_flow(self) -> pulumi.Output[str]:
        return pulumi.get(self, "invalidation_flow")

    @property
    @pulumi.getter
    def issuer(self) -> pulumi.Output[Optional[str]]:
        """
        Defaults to `authentik`.
        """
        return pulumi.get(self, "issuer")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="nameIdMapping")
    def name_id_mapping(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "name_id_mapping")

    @property
    @pulumi.getter(name="propertyMappings")
    def property_mappings(self) -> pulumi.Output[Optional[Sequence[str]]]:
        return pulumi.get(self, "property_mappings")

    @property
    @pulumi.getter(name="providerSamlId")
    def provider_saml_id(self) -> pulumi.Output[str]:
        return pulumi.get(self, "provider_saml_id")

    @property
    @pulumi.getter(name="sessionValidNotOnOrAfter")
    def session_valid_not_on_or_after(self) -> pulumi.Output[Optional[str]]:
        """
        Defaults to `minutes=86400`.
        """
        return pulumi.get(self, "session_valid_not_on_or_after")

    @property
    @pulumi.getter(name="signAssertion")
    def sign_assertion(self) -> pulumi.Output[Optional[bool]]:
        """
        Defaults to `true`.
        """
        return pulumi.get(self, "sign_assertion")

    @property
    @pulumi.getter(name="signResponse")
    def sign_response(self) -> pulumi.Output[Optional[bool]]:
        """
        Defaults to `false`.
        """
        return pulumi.get(self, "sign_response")

    @property
    @pulumi.getter(name="signatureAlgorithm")
    def signature_algorithm(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `http://www.w3.org/2000/09/xmldsig#rsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#rsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#rsa-sha512` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha1` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha256` -
        `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha384` - `http://www.w3.org/2001/04/xmldsig-more#ecdsa-sha512` -
        `http://www.w3.org/2000/09/xmldsig#dsa-sha1` Defaults to `http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`.
        """
        return pulumi.get(self, "signature_algorithm")

    @property
    @pulumi.getter(name="signingKp")
    def signing_kp(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "signing_kp")

    @property
    @pulumi.getter(name="spBinding")
    def sp_binding(self) -> pulumi.Output[Optional[str]]:
        """
        Allowed values: - `redirect` - `post` Defaults to `redirect`.
        """
        return pulumi.get(self, "sp_binding")

    @property
    @pulumi.getter(name="urlSloPost")
    def url_slo_post(self) -> pulumi.Output[str]:
        """
        Generated.
        """
        return pulumi.get(self, "url_slo_post")

    @property
    @pulumi.getter(name="urlSloRedirect")
    def url_slo_redirect(self) -> pulumi.Output[str]:
        """
        Generated.
        """
        return pulumi.get(self, "url_slo_redirect")

    @property
    @pulumi.getter(name="urlSsoInit")
    def url_sso_init(self) -> pulumi.Output[str]:
        """
        Generated.
        """
        return pulumi.get(self, "url_sso_init")

    @property
    @pulumi.getter(name="urlSsoPost")
    def url_sso_post(self) -> pulumi.Output[str]:
        """
        Generated.
        """
        return pulumi.get(self, "url_sso_post")

    @property
    @pulumi.getter(name="urlSsoRedirect")
    def url_sso_redirect(self) -> pulumi.Output[str]:
        """
        Generated.
        """
        return pulumi.get(self, "url_sso_redirect")

    @property
    @pulumi.getter(name="verificationKp")
    def verification_kp(self) -> pulumi.Output[Optional[str]]:
        return pulumi.get(self, "verification_kp")

